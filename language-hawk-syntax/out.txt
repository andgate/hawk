In order, the following will be built (use -v for more details):
 - language-hawk-syntax-0.0.0 (test:Example.hk) (first run)
Preprocessing test suite 'Example.hk' for language-hawk-syntax-0.0.0..
Building test suite 'Example.hk' for language-hawk-syntax-0.0.0..
Running 1 test suites...
Test suite Example.hk: RUNNING...
"\n\nReading Example Source:"


Beginning Lexing:
[ "" (TokenLn) @example/Example.hk:36:1
, "class" (TokenRsvp "class") @example/Example.hk:36:1-36:6
, "Assigns" (TokenConId "Assigns") @example/Example.hk:36:7-36:14
, "f" (TokenVarId "f") @example/Example.hk:36:15-36:16
, "has" (TokenRsvp "has") @example/Example.hk:36:17-36:20
, "" (TokenBlk) @example/Example.hk:37:3
, "" (TokenLn) @example/Example.hk:37:3
, "(" (TokenRsvp "(") @example/Example.hk:37:3-37:4
, "=" (TokenRsvp "=") @example/Example.hk:37:4-37:5
, ")" (TokenRsvp ")") @example/Example.hk:37:5-37:6
, ":" (TokenRsvp ":") @example/Example.hk:37:7-37:8
, "f" (TokenVarId "f") @example/Example.hk:37:10-37:11
, "a" (TokenVarId "a") @example/Example.hk:37:12-37:13
, "->" (TokenRsvp "->") @example/Example.hk:38:7-38:9
, "f" (TokenVarId "f") @example/Example.hk:38:10-38:11
, "a" (TokenVarId "a") @example/Example.hk:38:12-38:13
, "->" (TokenRsvp "->") @example/Example.hk:39:7-39:9
, "f" (TokenVarId "f") @example/Example.hk:39:10-39:11
, "a" (TokenVarId "a") @example/Example.hk:39:12-39:13
, "" (TokenLn') @example/Example.hk:41:1
, "" (TokenBlk') @example/Example.hk:41:1
, "" (TokenLn') @example/Example.hk:41:1 ]
[ "" (TokenLn) @example/Example.hk:41:1
, "instance" (TokenVarId "instance") @example/Example.hk:41:1-41:9
, "Assigns" (TokenConId "Assigns") @example/Example.hk:41:10-41:17
, "Cell" (TokenConId "Cell") @example/Example.hk:41:18-41:22
, "has" (TokenRsvp "has") @example/Example.hk:41:23-41:26
, "" (TokenBlk) @example/Example.hk:42:3
, "" (TokenLn) @example/Example.hk:42:3
, "(" (TokenRsvp "(") @example/Example.hk:42:3-42:4
, "=" (TokenRsvp "=") @example/Example.hk:42:4-42:5
, ")" (TokenRsvp ")") @example/Example.hk:42:5-42:6
, ":" (TokenRsvp ":") @example/Example.hk:42:7-42:8
, "Cell" (TokenConId "Cell") @example/Example.hk:42:10-42:14
, "a" (TokenVarId "a") @example/Example.hk:42:15-42:16
, "->" (TokenRsvp "->") @example/Example.hk:43:7-43:9
, "Cell" (TokenConId "Cell") @example/Example.hk:43:10-43:14
, "a" (TokenVarId "a") @example/Example.hk:43:15-43:16
, "->" (TokenRsvp "->") @example/Example.hk:44:7-44:9
, "Cell" (TokenConId "Cell") @example/Example.hk:44:10-44:14
, "a" (TokenVarId "a") @example/Example.hk:44:15-44:16
, "" (TokenLn') @example/Example.hk:61:1
, "" (TokenBlk') @example/Example.hk:61:1
, "" (TokenLn') @example/Example.hk:61:1 ]
[ "" (TokenLn) @example/Example.hk:61:1
, "foreign" (TokenRsvp "foreign") @example/Example.hk:61:1-61:8
, "import" (TokenRsvp "import") @example/Example.hk:61:9-61:15
, "ccall" (TokenRsvp "ccall") @example/Example.hk:61:16-61:21
, "putStr" (TokenVarId "putStr") @example/Example.hk:61:22-61:28
, ":" (TokenRsvp ":") @example/Example.hk:61:29-61:30
, "String" (TokenConId "String") @example/Example.hk:61:31-61:37
, "->" (TokenRsvp "->") @example/Example.hk:61:38-61:40
, "(" (TokenRsvp "(") @example/Example.hk:61:41-61:42
, ")" (TokenRsvp ")") @example/Example.hk:61:42-61:43
, "" (TokenLn') @example/Example.hk:64:1 ]
[ "" (TokenLn) @example/Example.hk:64:1
, "Bool" (TokenConId "Bool") @example/Example.hk:64:1-64:5
, "=" (TokenRsvp "=") @example/Example.hk:64:6-64:7
, "True" (TokenConId "True") @example/Example.hk:64:8-64:12
, "|" (TokenRsvp "|") @example/Example.hk:64:13-64:14
, "False" (TokenConId "False") @example/Example.hk:64:15-64:20
, "" (TokenLn') @example/Example.hk:67:1 ]
[ "" (TokenLn) @example/Example.hk:67:1
, "Id" (TokenConId "Id") @example/Example.hk:67:1-67:3
, "a" (TokenVarId "a") @example/Example.hk:67:4-67:5
, "=" (TokenRsvp "=") @example/Example.hk:67:6-67:7
, "Id" (TokenConId "Id") @example/Example.hk:67:8-67:10
, "{" (TokenRsvp "{") @example/Example.hk:67:11-67:12
, "id" (TokenVarId "id") @example/Example.hk:67:13-67:15
, ":" (TokenRsvp ":") @example/Example.hk:67:16-67:17
, "a" (TokenVarId "a") @example/Example.hk:67:18-67:19
, "}" (TokenRsvp "}") @example/Example.hk:67:20-67:21
, "" (TokenLn') @example/Example.hk:70:1 ]
[ "" (TokenLn) @example/Example.hk:70:1
, "Cell" (TokenConId "Cell") @example/Example.hk:70:1-70:5
, "a" (TokenVarId "a") @example/Example.hk:70:6-70:7
, "=" (TokenRsvp "=") @example/Example.hk:70:8-70:9
, "Cell" (TokenConId "Cell") @example/Example.hk:70:10-70:14
, "{" (TokenRsvp "{") @example/Example.hk:70:15-70:16
, "mutable" (TokenVarId "mutable") @example/Example.hk:70:17-70:24
, ":" (TokenRsvp ":") @example/Example.hk:70:25-70:26
, "a" (TokenVarId "a") @example/Example.hk:70:27-70:28
, "}" (TokenRsvp "}") @example/Example.hk:70:29-70:30
, "" (TokenLn') @example/Example.hk:73:1 ]
[ "" (TokenLn) @example/Example.hk:73:1
, "Box" (TokenConId "Box") @example/Example.hk:73:1-73:4
, "a" (TokenVarId "a") @example/Example.hk:73:5-73:6
, "=" (TokenRsvp "=") @example/Example.hk:73:7-73:8
, "Box" (TokenConId "Box") @example/Example.hk:73:9-73:12
, "{" (TokenRsvp "{") @example/Example.hk:73:13-73:14
, "modify" (TokenVarId "modify") @example/Example.hk:73:15-73:21
, ":" (TokenRsvp ":") @example/Example.hk:73:22-73:23
, "a" (TokenVarId "a") @example/Example.hk:73:24-73:25
, "}" (TokenRsvp "}") @example/Example.hk:73:26-73:27
, "" (TokenLn') @example/Example.hk:76:1 ]
[ "" (TokenLn) @example/Example.hk:76:1
, "Ref" (TokenConId "Ref") @example/Example.hk:76:1-76:4
, "a" (TokenVarId "a") @example/Example.hk:76:5-76:6
, "=" (TokenRsvp "=") @example/Example.hk:76:7-76:8
, "Ref" (TokenConId "Ref") @example/Example.hk:76:9-76:12
, "{" (TokenRsvp "{") @example/Example.hk:76:13-76:14
, "deref" (TokenVarId "deref") @example/Example.hk:76:15-76:20
, ":" (TokenRsvp ":") @example/Example.hk:76:21-76:22
, "a" (TokenVarId "a") @example/Example.hk:76:23-76:24
, "}" (TokenRsvp "}") @example/Example.hk:76:25-76:26
, "" (TokenLn') @example/Example.hk:79:1 ]
[ "" (TokenLn) @example/Example.hk:79:1
, "Safe" (TokenConId "Safe") @example/Example.hk:79:1-79:5
, "a" (TokenVarId "a") @example/Example.hk:79:6-79:7
, "=" (TokenRsvp "=") @example/Example.hk:79:8-79:9
, "Safe" (TokenConId "Safe") @example/Example.hk:79:10-79:14
, "{" (TokenRsvp "{") @example/Example.hk:79:15-79:16
, "unsafe" (TokenVarId "unsafe") @example/Example.hk:79:17-79:23
, ":" (TokenRsvp ":") @example/Example.hk:79:24-79:25
, "a" (TokenVarId "a") @example/Example.hk:79:26-79:27
, "}" (TokenRsvp "}") @example/Example.hk:79:28-79:29
, "" (TokenLn') @example/Example.hk:84:1 ]
[ "" (TokenLn) @example/Example.hk:84:1
, "Linear" (TokenConId "Linear") @example/Example.hk:84:1-84:7
, "a" (TokenVarId "a") @example/Example.hk:84:8-84:9
, "=" (TokenRsvp "=") @example/Example.hk:84:10-84:11
, "Linear" (TokenConId "Linear") @example/Example.hk:84:12-84:18
, "{" (TokenRsvp "{") @example/Example.hk:84:19-84:20
, "consume" (TokenVarId "consume") @example/Example.hk:84:21-84:28
, ":" (TokenRsvp ":") @example/Example.hk:84:29-84:30
, "a" (TokenVarId "a") @example/Example.hk:84:31-84:32
, "}" (TokenRsvp "}") @example/Example.hk:84:33-84:34
, "" (TokenLn') @example/Example.hk:87:1 ]
[ "" (TokenLn) @example/Example.hk:87:1
, "Maybe" (TokenConId "Maybe") @example/Example.hk:87:1-87:6
, "a" (TokenVarId "a") @example/Example.hk:87:7-87:8
, "=" (TokenRsvp "=") @example/Example.hk:87:9-87:10
, "Nothing" (TokenConId "Nothing") @example/Example.hk:87:11-87:18
, "|" (TokenRsvp "|") @example/Example.hk:87:19-87:20
, "Just" (TokenConId "Just") @example/Example.hk:87:21-87:25
, "a" (TokenVarId "a") @example/Example.hk:87:26-87:27
, "" (TokenLn') @example/Example.hk:88:1 ]
[ "" (TokenLn) @example/Example.hk:88:1
, "Either" (TokenConId "Either") @example/Example.hk:88:1-88:7
, "a" (TokenVarId "a") @example/Example.hk:88:8-88:9
, "b" (TokenVarId "b") @example/Example.hk:88:10-88:11
, "=" (TokenRsvp "=") @example/Example.hk:88:12-88:13
, "Left" (TokenConId "Left") @example/Example.hk:88:14-88:18
, "a" (TokenVarId "a") @example/Example.hk:88:19-88:20
, "|" (TokenRsvp "|") @example/Example.hk:88:21-88:22
, "Right" (TokenConId "Right") @example/Example.hk:88:23-88:28
, "b" (TokenVarId "b") @example/Example.hk:88:29-88:30
, "" (TokenLn') @example/Example.hk:96:1 ]
[ "" (TokenLn) @example/Example.hk:96:1
, "-------------------------------------" (TokenOpId "-------------------------------------") @example/Example.hk:96:1-96:38
, "" (TokenLn') @example/Example.hk:98:1 ]
[ "" (TokenLn) @example/Example.hk:98:1
, "(" (TokenRsvp "(") @example/Example.hk:98:1-98:2
, "$" (TokenOpId "$") @example/Example.hk:98:2-98:3
, ")" (TokenRsvp ")") @example/Example.hk:98:3-98:4
, ":" (TokenRsvp ":") @example/Example.hk:98:5-98:6
, "(" (TokenRsvp "(") @example/Example.hk:98:7-98:8
, "a" (TokenVarId "a") @example/Example.hk:98:8-98:9
, "->" (TokenRsvp "->") @example/Example.hk:98:10-98:12
, "b" (TokenVarId "b") @example/Example.hk:98:13-98:14
, ")" (TokenRsvp ")") @example/Example.hk:98:14-98:15
, "" (TokenLn') @example/Example.hk:100:1 ]
[ "" (TokenLn) @example/Example.hk:100:1
, "class" (TokenRsvp "class") @example/Example.hk:100:1-100:6
, "Category" (TokenConId "Category") @example/Example.hk:100:7-100:15
, "cat" (TokenVarId "cat") @example/Example.hk:100:16-100:19
, "where" (TokenVarId "where") @example/Example.hk:100:20-100:25
, "id" (TokenVarId "id") @example/Example.hk:101:3-101:5
, ":" (TokenRsvp ":") @example/Example.hk:101:6-101:7
, "cat" (TokenVarId "cat") @example/Example.hk:101:8-101:11
, "a" (TokenVarId "a") @example/Example.hk:101:12-101:13
, "a" (TokenVarId "a") @example/Example.hk:101:14-101:15
, "(" (TokenRsvp "(") @example/Example.hk:102:3-102:4
, "." (TokenRsvp ".") @example/Example.hk:102:4-102:5
, ")" (TokenRsvp ")") @example/Example.hk:102:5-102:6
, ":" (TokenRsvp ":") @example/Example.hk:102:7-102:8
, "cat" (TokenVarId "cat") @example/Example.hk:102:9-102:12
, "" (TokenLn') @example/Example.hk:104:1 ]
[ "" (TokenLn) @example/Example.hk:104:1
, "Category" (TokenConId "Category") @example/Example.hk:104:1-104:9
, "(" (TokenRsvp "(") @example/Example.hk:104:10-104:11
, "->" (TokenRsvp "->") @example/Example.hk:104:11-104:13
, ")" (TokenRsvp ")") @example/Example.hk:104:13-104:14
, "where" (TokenVarId "where") @example/Example.hk:104:15-104:20
, "id" (TokenVarId "id") @example/Example.hk:105:3-105:5
, "=" (TokenRsvp "=") @example/Example.hk:105:6-105:7
, "\" (TokenRsvp "\\") @example/Example.hk:105:8-105:9
, "a" (TokenVarId "a") @example/Example.hk:105:9-105:10
, "->" (TokenRsvp "->") @example/Example.hk:105:11-105:13
, "a" (TokenVarId "a") @example/Example.hk:105:14-105:15
, "(" (TokenRsvp "(") @example/Example.hk:106:3-106:4
, "." (TokenRsvp ".") @example/Example.hk:106:4-106:5
, ")" (TokenRsvp ")") @example/Example.hk:106:5-106:6
, "g" (TokenVarId "g") @example/Example.hk:106:7-106:8
, "f" (TokenVarId "f") @example/Example.hk:106:9-106:10
, "a" (TokenVarId "a") @example/Example.hk:106:11-106:12
, "=" (TokenRsvp "=") @example/Example.hk:106:13-106:14
, "g" (TokenVarId "g") @example/Example.hk:106:15-106:16
, "(" (TokenRsvp "(") @example/Example.hk:106:17-106:18
, "f" (TokenVarId "f") @example/Example.hk:106:18-106:19
, "a" (TokenVarId "a") @example/Example.hk:106:20-106:21
, ")" (TokenRsvp ")") @example/Example.hk:106:21-106:22
, "" (TokenLn') @example/Example.hk:109:1 ]
[ "" (TokenLn) @example/Example.hk:109:1
, "-------------------------------------" (TokenOpId "-------------------------------------") @example/Example.hk:109:1-109:38
, "" (TokenLn') @example/Example.hk:113:1 ]
[ "" (TokenLn) @example/Example.hk:113:1
, "-------------------------------------" (TokenOpId "-------------------------------------") @example/Example.hk:113:1-113:38
, "" (TokenLn') @example/Example.hk:116:1 ]
[ "" (TokenLn) @example/Example.hk:116:1
, "class" (TokenRsvp "class") @example/Example.hk:116:1-116:6
, "Functor" (TokenConId "Functor") @example/Example.hk:116:7-116:14
, "f" (TokenVarId "f") @example/Example.hk:116:15-116:16
, "has" (TokenRsvp "has") @example/Example.hk:116:17-116:20
, "" (TokenBlk) @example/Example.hk:117:3
, "" (TokenLn) @example/Example.hk:117:3
, "fmap" (TokenVarId "fmap") @example/Example.hk:117:3-117:7
, ":" (TokenRsvp ":") @example/Example.hk:117:8-117:9
, "(" (TokenRsvp "(") @example/Example.hk:117:10-117:11
, "a" (TokenVarId "a") @example/Example.hk:117:11-117:12
, "->" (TokenRsvp "->") @example/Example.hk:117:13-117:15
, "b" (TokenVarId "b") @example/Example.hk:117:16-117:17
, ")" (TokenRsvp ")") @example/Example.hk:117:17-117:18
, "->" (TokenRsvp "->") @example/Example.hk:117:19-117:21
, "f" (TokenVarId "f") @example/Example.hk:117:22-117:23
, "a" (TokenVarId "a") @example/Example.hk:117:24-117:25
, "->" (TokenRsvp "->") @example/Example.hk:117:26-117:28
, "f" (TokenVarId "f") @example/Example.hk:117:29-117:30
, "b" (TokenVarId "b") @example/Example.hk:117:31-117:32
, "" (TokenLn') @example/Example.hk:121:1
, "" (TokenBlk') @example/Example.hk:121:1
, "" (TokenLn') @example/Example.hk:121:1 ]
[ "" (TokenLn) @example/Example.hk:121:1
, "Functor" (TokenConId "Functor") @example/Example.hk:121:1-121:8
, "Box" (TokenConId "Box") @example/Example.hk:121:9-121:12
, "has" (TokenRsvp "has") @example/Example.hk:121:13-121:16
, "" (TokenBlk) @example/Example.hk:122:3
, "" (TokenLn) @example/Example.hk:122:3
, "fmap" (TokenVarId "fmap") @example/Example.hk:122:3-122:7
, "f" (TokenVarId "f") @example/Example.hk:122:8-122:9
, "(" (TokenRsvp "(") @example/Example.hk:122:10-122:11
, "Box" (TokenConId "Box") @example/Example.hk:122:11-122:14
, "x" (TokenVarId "x") @example/Example.hk:122:15-122:16
, ")" (TokenRsvp ")") @example/Example.hk:122:16-122:17
, "=" (TokenRsvp "=") @example/Example.hk:122:18-122:19
, "Box" (TokenConId "Box") @example/Example.hk:122:20-122:23
, "(" (TokenRsvp "(") @example/Example.hk:122:24-122:25
, "f" (TokenVarId "f") @example/Example.hk:122:25-122:26
, "x" (TokenVarId "x") @example/Example.hk:122:27-122:28
, ")" (TokenRsvp ")") @example/Example.hk:122:28-122:29
, "" (TokenLn') @example/Example.hk:124:1
, "" (TokenBlk') @example/Example.hk:124:1
, "" (TokenLn') @example/Example.hk:124:1 ]
[ "" (TokenLn) @example/Example.hk:124:1
, "Functor" (TokenConId "Functor") @example/Example.hk:124:1-124:8
, "Linear" (TokenConId "Linear") @example/Example.hk:124:9-124:15
, "has" (TokenRsvp "has") @example/Example.hk:124:16-124:19
, "" (TokenBlk) @example/Example.hk:125:3
, "" (TokenLn) @example/Example.hk:125:3
, "fmap" (TokenVarId "fmap") @example/Example.hk:125:3-125:7
, "f" (TokenVarId "f") @example/Example.hk:125:8-125:9
, "(" (TokenRsvp "(") @example/Example.hk:125:10-125:11
, "Linear" (TokenConId "Linear") @example/Example.hk:125:11-125:17
, "x" (TokenVarId "x") @example/Example.hk:125:18-125:19
, ")" (TokenRsvp ")") @example/Example.hk:125:19-125:20
, "=" (TokenRsvp "=") @example/Example.hk:125:21-125:22
, "Linear" (TokenConId "Linear") @example/Example.hk:125:23-125:29
, "(" (TokenRsvp "(") @example/Example.hk:125:30-125:31
, "f" (TokenVarId "f") @example/Example.hk:125:31-125:32
, "x" (TokenVarId "x") @example/Example.hk:125:33-125:34
, ")" (TokenRsvp ")") @example/Example.hk:125:34-125:35
, "" (TokenLn') @example/Example.hk:127:1
, "" (TokenBlk') @example/Example.hk:127:1
, "" (TokenLn') @example/Example.hk:127:1 ]
[ "" (TokenLn) @example/Example.hk:127:1
, "Functor" (TokenConId "Functor") @example/Example.hk:127:1-127:8
, "Maybe" (TokenConId "Maybe") @example/Example.hk:127:9-127:14
, "has" (TokenRsvp "has") @example/Example.hk:127:15-127:18
, "" (TokenBlk) @example/Example.hk:128:3
, "" (TokenLn) @example/Example.hk:128:3
, "fmap" (TokenVarId "fmap") @example/Example.hk:128:3-128:7
, "f" (TokenVarId "f") @example/Example.hk:128:8-128:9
, "Nothing" (TokenConId "Nothing") @example/Example.hk:128:10-128:17
, "=" (TokenRsvp "=") @example/Example.hk:128:18-128:19
, "Nothing" (TokenConId "Nothing") @example/Example.hk:128:20-128:27
, "" (TokenLn') @example/Example.hk:129:3
, "" (TokenLn) @example/Example.hk:129:3
, "fmap" (TokenVarId "fmap") @example/Example.hk:129:3-129:7
, "f" (TokenVarId "f") @example/Example.hk:129:8-129:9
, "(" (TokenRsvp "(") @example/Example.hk:129:10-129:11
, "Just" (TokenConId "Just") @example/Example.hk:129:11-129:15
, "a" (TokenVarId "a") @example/Example.hk:129:16-129:17
, ")" (TokenRsvp ")") @example/Example.hk:129:17-129:18
, "=" (TokenRsvp "=") @example/Example.hk:129:19-129:20
, "Just" (TokenConId "Just") @example/Example.hk:129:21-129:25
, "(" (TokenRsvp "(") @example/Example.hk:129:26-129:27
, "f" (TokenVarId "f") @example/Example.hk:129:27-129:28
, "a" (TokenVarId "a") @example/Example.hk:129:29-129:30
, ")" (TokenRsvp ")") @example/Example.hk:129:30-129:31
, "" (TokenLn') @example/Example.hk:131:1
, "" (TokenBlk') @example/Example.hk:131:1
, "" (TokenLn') @example/Example.hk:131:1 ]
[ "" (TokenLn) @example/Example.hk:131:1
, "Functor" (TokenConId "Functor") @example/Example.hk:131:1-131:8
, "Either" (TokenConId "Either") @example/Example.hk:131:9-131:15
, "a" (TokenVarId "a") @example/Example.hk:131:16-131:17
, "has" (TokenRsvp "has") @example/Example.hk:131:18-131:21
, "" (TokenBlk) @example/Example.hk:132:3
, "" (TokenLn) @example/Example.hk:132:3
, "fmap" (TokenVarId "fmap") @example/Example.hk:132:3-132:7
, "f" (TokenVarId "f") @example/Example.hk:132:8-132:9
, "e" (TokenVarId "e") @example/Example.hk:132:10-132:11
, "=" (TokenRsvp "=") @example/Example.hk:132:12-132:13
, "case" (TokenRsvp "case") @example/Example.hk:133:5-133:9
, "e" (TokenVarId "e") @example/Example.hk:133:10-133:11
, "of" (TokenRsvp "of") @example/Example.hk:133:12-133:14
, "Left" (TokenConId "Left") @example/Example.hk:134:7-134:11
, "x" (TokenVarId "x") @example/Example.hk:134:12-134:13
, "->" (TokenRsvp "->") @example/Example.hk:134:14-134:16
, "Left" (TokenConId "Left") @example/Example.hk:134:17-134:21
, "x" (TokenVarId "x") @example/Example.hk:134:22-134:23
, "Right" (TokenConId "Right") @example/Example.hk:135:7-135:12
, "a" (TokenVarId "a") @example/Example.hk:135:13-135:14
, "->" (TokenRsvp "->") @example/Example.hk:135:15-135:17
, "Right" (TokenConId "Right") @example/Example.hk:135:18-135:23
, "a" (TokenVarId "a") @example/Example.hk:135:24-135:25
, "" (TokenLn') @example/Example.hk:137:1
, "" (TokenBlk') @example/Example.hk:137:1
, "" (TokenLn') @example/Example.hk:137:1 ]
[ "" (TokenLn) @example/Example.hk:137:1
, "Functor" (TokenConId "Functor") @example/Example.hk:137:1-137:8
, "[" (TokenRsvp "[") @example/Example.hk:137:9-137:10
, "a" (TokenVarId "a") @example/Example.hk:137:10-137:11
, "]" (TokenRsvp "]") @example/Example.hk:137:11-137:12
, "has" (TokenRsvp "has") @example/Example.hk:137:13-137:16
, "" (TokenBlk) @example/Example.hk:138:3
, "" (TokenLn) @example/Example.hk:138:3
, "fmap" (TokenVarId "fmap") @example/Example.hk:138:3-138:7
, "f" (TokenVarId "f") @example/Example.hk:138:8-138:9
, "xs" (TokenVarId "xs") @example/Example.hk:138:10-138:12
, "=" (TokenRsvp "=") @example/Example.hk:138:13-138:14
, "let" (TokenVarId "let") @example/Example.hk:139:5-139:8
, "xs'" (TokenVarId "xs'") @example/Example.hk:139:9-139:12
, "<-" (TokenRsvp "<-") @example/Example.hk:139:13-139:15
, "[" (TokenRsvp "[") @example/Example.hk:139:16-139:17
, "]" (TokenRsvp "]") @example/Example.hk:139:17-139:18
, "5" (TokenInteger 5) @example/Example.hk:139:19-139:20
, ":" (TokenRsvp ":") @example/Example.hk:139:21-139:22
, "[" (TokenRsvp "[") @example/Example.hk:139:23-139:24
, "b" (TokenVarId "b") @example/Example.hk:139:24-139:25
, "]" (TokenRsvp "]") @example/Example.hk:139:25-139:26
, "loop" (TokenVarId "loop") @example/Example.hk:140:9-140:13
, ":" (TokenRsvp ":") @example/Example.hk:140:14-140:15
, "Int" (TokenConId "Int") @example/Example.hk:140:16-140:19
, "->" (TokenRsvp "->") @example/Example.hk:140:20-140:22
, "[" (TokenRsvp "[") @example/Example.hk:140:23-140:24
, "b" (TokenVarId "b") @example/Example.hk:140:24-140:25
, "]" (TokenRsvp "]") @example/Example.hk:140:25-140:26
, "loop" (TokenVarId "loop") @example/Example.hk:141:9-141:13
, "0" (TokenInteger 0) @example/Example.hk:141:14-141:15
, "=" (TokenRsvp "=") @example/Example.hk:141:16-141:17
, "xs'" (TokenVarId "xs'") @example/Example.hk:141:18-141:21
, "loop" (TokenVarId "loop") @example/Example.hk:142:9-142:13
, "i" (TokenVarId "i") @example/Example.hk:142:14-142:15
, "=" (TokenRsvp "=") @example/Example.hk:142:16-142:17
, "let" (TokenVarId "let") @example/Example.hk:143:13-143:16
, "x'" (TokenVarId "x'") @example/Example.hk:143:17-143:19
, "<-" (TokenRsvp "<-") @example/Example.hk:143:20-143:22
, "f" (TokenVarId "f") @example/Example.hk:143:23-143:24
, "xs" (TokenVarId "xs") @example/Example.hk:143:25-143:27
, "[" (TokenRsvp "[") @example/Example.hk:143:27-143:28
, "i" (TokenVarId "i") @example/Example.hk:143:28-143:29
, "]" (TokenRsvp "]") @example/Example.hk:143:29-143:30
, "xs'" (TokenVarId "xs'") @example/Example.hk:144:17-144:20
, "[" (TokenRsvp "[") @example/Example.hk:144:20-144:21
, "i" (TokenVarId "i") @example/Example.hk:144:21-144:22
, "]" (TokenRsvp "]") @example/Example.hk:144:22-144:23
, "=" (TokenRsvp "=") @example/Example.hk:144:24-144:25
, "x" (TokenVarId "x") @example/Example.hk:144:26-144:27
, "in" (TokenVarId "in") @example/Example.hk:145:13-145:15
, "fmap'" (TokenVarId "fmap'") @example/Example.hk:145:16-145:21
, "(" (TokenRsvp "(") @example/Example.hk:145:22-145:23
, "xs'" (TokenVarId "xs'") @example/Example.hk:145:23-145:26
, "(" (TokenRsvp "(") @example/Example.hk:145:26-145:27
, "i" (TokenVarId "i") @example/Example.hk:145:27-145:28
, "-" (TokenOpId "-") @example/Example.hk:145:28-145:29
, "1" (TokenInteger 1) @example/Example.hk:145:29-145:30
, ")" (TokenRsvp ")") @example/Example.hk:145:30-145:31
, "in" (TokenVarId "in") @example/Example.hk:146:5-146:7
, "loop" (TokenVarId "loop") @example/Example.hk:146:8-146:12
, "(" (TokenRsvp "(") @example/Example.hk:146:13-146:14
, "size" (TokenVarId "size") @example/Example.hk:146:14-146:18
, "xs" (TokenVarId "xs") @example/Example.hk:146:19-146:21
, ")" (TokenRsvp ")") @example/Example.hk:146:21-146:22
, "xs'" (TokenVarId "xs'") @example/Example.hk:148:5-148:8
, "<-" (TokenRsvp "<-") @example/Example.hk:148:9-148:11
, "Arr" (TokenConId "Arr") @example/Example.hk:148:12-148:15
, "(" (TokenRsvp "(") @example/Example.hk:148:16-148:17
, "size" (TokenVarId "size") @example/Example.hk:148:17-148:21
, "xs" (TokenVarId "xs") @example/Example.hk:148:22-148:24
, ")" (TokenRsvp ")") @example/Example.hk:148:24-148:25
, "[" (TokenRsvp "[") @example/Example.hk:148:26-148:27
, "]" (TokenRsvp "]") @example/Example.hk:148:27-148:28
, "go" (TokenVarId "go") @example/Example.hk:149:5-149:7
, "<-" (TokenRsvp "<-") @example/Example.hk:149:8-149:10
, "(" (TokenRsvp "(") @example/Example.hk:149:11-149:12
, "\" (TokenRsvp "\\") @example/Example.hk:149:13-149:14
, "i" (TokenVarId "i") @example/Example.hk:149:14-149:15
, "->" (TokenRsvp "->") @example/Example.hk:149:16-149:18
, "xs'" (TokenVarId "xs'") @example/Example.hk:149:19-149:22
, "[" (TokenRsvp "[") @example/Example.hk:149:22-149:23
, "i" (TokenVarId "i") @example/Example.hk:149:23-149:24
, "]" (TokenRsvp "]") @example/Example.hk:149:24-149:25
, "=" (TokenRsvp "=") @example/Example.hk:149:26-149:27
, "f" (TokenVarId "f") @example/Example.hk:149:28-149:29
, "xs" (TokenVarId "xs") @example/Example.hk:149:30-149:32
, "[" (TokenRsvp "[") @example/Example.hk:149:32-149:33
, "i" (TokenVarId "i") @example/Example.hk:149:33-149:34
, "]" (TokenRsvp "]") @example/Example.hk:149:34-149:35
, ";" (TokenRsvp ";") @example/Example.hk:149:35-149:36
, "go" (TokenVarId "go") @example/Example.hk:149:37-149:39
, "(" (TokenRsvp "(") @example/Example.hk:149:40-149:41
, "i" (TokenVarId "i") @example/Example.hk:149:41-149:42
, "-" (TokenOpId "-") @example/Example.hk:149:42-149:43
, "1" (TokenInteger 1) @example/Example.hk:149:43-149:44
, ")" (TokenRsvp ")") @example/Example.hk:149:44-149:45
, ")" (TokenRsvp ")") @example/Example.hk:149:45-149:46
, "go" (TokenVarId "go") @example/Example.hk:150:5-150:7
, "(" (TokenRsvp "(") @example/Example.hk:150:8-150:9
, "size" (TokenVarId "size") @example/Example.hk:150:9-150:13
, "xs" (TokenVarId "xs") @example/Example.hk:150:14-150:16
, ")" (TokenRsvp ")") @example/Example.hk:150:16-150:17
, "xs'" (TokenVarId "xs'") @example/Example.hk:151:5-151:8
, "" (TokenLn') @example/Example.hk:155:1
, "" (TokenBlk') @example/Example.hk:155:1
, "" (TokenLn') @example/Example.hk:155:1 ]
[ "" (TokenLn) @example/Example.hk:155:1
, "class" (TokenRsvp "class") @example/Example.hk:155:1-155:6
, "Functor" (TokenConId "Functor") @example/Example.hk:155:7-155:14
, "f" (TokenVarId "f") @example/Example.hk:155:15-155:16
, "=>" (TokenRsvp "=>") @example/Example.hk:155:17-155:19
, "Applicative" (TokenConId "Applicative") @example/Example.hk:155:20-155:31
, "f" (TokenVarId "f") @example/Example.hk:155:32-155:33
, "has" (TokenRsvp "has") @example/Example.hk:155:34-155:37
, "" (TokenBlk) @example/Example.hk:156:3
, "" (TokenLn) @example/Example.hk:156:3
, "pure" (TokenVarId "pure") @example/Example.hk:156:3-156:7
, ":" (TokenRsvp ":") @example/Example.hk:156:8-156:9
, "a" (TokenVarId "a") @example/Example.hk:156:10-156:11
, "->" (TokenRsvp "->") @example/Example.hk:156:12-156:14
, "f" (TokenVarId "f") @example/Example.hk:156:15-156:16
, "a" (TokenVarId "a") @example/Example.hk:156:17-156:18
, "" (TokenLn') @example/Example.hk:157:3
, "" (TokenLn) @example/Example.hk:157:3
, "(" (TokenRsvp "(") @example/Example.hk:157:3-157:4
, "<*>" (TokenOpId "<*>") @example/Example.hk:157:4-157:7
, ")" (TokenRsvp ")") @example/Example.hk:157:7-157:8
, ":" (TokenRsvp ":") @example/Example.hk:157:9-157:10
, "f" (TokenVarId "f") @example/Example.hk:157:11-157:12
, "(" (TokenRsvp "(") @example/Example.hk:157:13-157:14
, "a" (TokenVarId "a") @example/Example.hk:157:14-157:15
, "->" (TokenRsvp "->") @example/Example.hk:157:16-157:18
, "b" (TokenVarId "b") @example/Example.hk:157:19-157:20
, ")" (TokenRsvp ")") @example/Example.hk:157:20-157:21
, "->" (TokenRsvp "->") @example/Example.hk:157:22-157:24
, "f" (TokenVarId "f") @example/Example.hk:157:25-157:26
, "a" (TokenVarId "a") @example/Example.hk:157:27-157:28
, "->" (TokenRsvp "->") @example/Example.hk:157:29-157:31
, "f" (TokenVarId "f") @example/Example.hk:157:32-157:33
, "b" (TokenVarId "b") @example/Example.hk:157:34-157:35
, "" (TokenLn') @example/Example.hk:161:1
, "" (TokenBlk') @example/Example.hk:161:1
, "" (TokenLn') @example/Example.hk:161:1 ]
[ "" (TokenLn) @example/Example.hk:161:1
, "Applicative" (TokenConId "Applicative") @example/Example.hk:161:1-161:12
, "Box" (TokenConId "Box") @example/Example.hk:161:13-161:16
, "has" (TokenRsvp "has") @example/Example.hk:161:17-161:20
, "" (TokenBlk) @example/Example.hk:162:3
, "" (TokenLn) @example/Example.hk:162:3
, "pure" (TokenVarId "pure") @example/Example.hk:162:3-162:7
, "a" (TokenVarId "a") @example/Example.hk:162:8-162:9
, "=" (TokenRsvp "=") @example/Example.hk:162:10-162:11
, "Box" (TokenConId "Box") @example/Example.hk:162:12-162:15
, "a" (TokenVarId "a") @example/Example.hk:162:16-162:17
, "" (TokenLn') @example/Example.hk:163:3
, "" (TokenLn) @example/Example.hk:163:3
, "(" (TokenRsvp "(") @example/Example.hk:163:3-163:4
, "<*>" (TokenOpId "<*>") @example/Example.hk:163:4-163:7
, ")" (TokenRsvp ")") @example/Example.hk:163:7-163:8
, "(" (TokenRsvp "(") @example/Example.hk:163:9-163:10
, "Box" (TokenConId "Box") @example/Example.hk:163:10-163:13
, "f" (TokenVarId "f") @example/Example.hk:163:14-163:15
, ")" (TokenRsvp ")") @example/Example.hk:163:15-163:16
, "m" (TokenVarId "m") @example/Example.hk:163:17-163:18
, "=" (TokenRsvp "=") @example/Example.hk:163:19-163:20
, "fmap" (TokenVarId "fmap") @example/Example.hk:163:21-163:25
, "f" (TokenVarId "f") @example/Example.hk:163:26-163:27
, "m" (TokenVarId "m") @example/Example.hk:163:28-163:29
, "" (TokenLn') @example/Example.hk:165:1
, "" (TokenBlk') @example/Example.hk:165:1
, "" (TokenLn') @example/Example.hk:165:1 ]
[ "" (TokenLn) @example/Example.hk:165:1
, "Applicative" (TokenConId "Applicative") @example/Example.hk:165:1-165:12
, "Linear" (TokenConId "Linear") @example/Example.hk:165:13-165:19
, "has" (TokenRsvp "has") @example/Example.hk:165:20-165:23
, "" (TokenBlk) @example/Example.hk:166:3
, "" (TokenLn) @example/Example.hk:166:3
, "pure" (TokenVarId "pure") @example/Example.hk:166:3-166:7
, "a" (TokenVarId "a") @example/Example.hk:166:8-166:9
, "=" (TokenRsvp "=") @example/Example.hk:166:10-166:11
, "Linear" (TokenConId "Linear") @example/Example.hk:166:12-166:18
, "a" (TokenVarId "a") @example/Example.hk:166:19-166:20
, "" (TokenLn') @example/Example.hk:167:3
, "" (TokenLn) @example/Example.hk:167:3
, "(" (TokenRsvp "(") @example/Example.hk:167:3-167:4
, "<*>" (TokenOpId "<*>") @example/Example.hk:167:4-167:7
, ")" (TokenRsvp ")") @example/Example.hk:167:7-167:8
, "(" (TokenRsvp "(") @example/Example.hk:167:9-167:10
, "Linear" (TokenConId "Linear") @example/Example.hk:167:10-167:16
, "f" (TokenVarId "f") @example/Example.hk:167:17-167:18
, ")" (TokenRsvp ")") @example/Example.hk:167:18-167:19
, "m" (TokenVarId "m") @example/Example.hk:167:20-167:21
, "=" (TokenRsvp "=") @example/Example.hk:167:22-167:23
, "fmap" (TokenVarId "fmap") @example/Example.hk:167:24-167:28
, "f" (TokenVarId "f") @example/Example.hk:167:29-167:30
, "m" (TokenVarId "m") @example/Example.hk:167:31-167:32
, "" (TokenLn') @example/Example.hk:169:1
, "" (TokenBlk') @example/Example.hk:169:1
, "" (TokenLn') @example/Example.hk:169:1 ]
[ "" (TokenLn) @example/Example.hk:169:1
, "Applicative" (TokenConId "Applicative") @example/Example.hk:169:1-169:12
, "Maybe" (TokenConId "Maybe") @example/Example.hk:169:13-169:18
, "has" (TokenRsvp "has") @example/Example.hk:169:19-169:22
, "" (TokenBlk) @example/Example.hk:170:3
, "" (TokenLn) @example/Example.hk:170:3
, "pure" (TokenVarId "pure") @example/Example.hk:170:3-170:7
, "a" (TokenVarId "a") @example/Example.hk:170:8-170:9
, "=" (TokenRsvp "=") @example/Example.hk:170:10-170:11
, "Just" (TokenConId "Just") @example/Example.hk:170:12-170:16
, "a" (TokenVarId "a") @example/Example.hk:170:17-170:18
, "" (TokenLn') @example/Example.hk:172:3
, "" (TokenLn) @example/Example.hk:172:3
, "(" (TokenRsvp "(") @example/Example.hk:172:3-172:4
, "<*>" (TokenOpId "<*>") @example/Example.hk:172:4-172:7
, ")" (TokenRsvp ")") @example/Example.hk:172:7-172:8
, "(" (TokenRsvp "(") @example/Example.hk:172:9-172:10
, "Just" (TokenConId "Just") @example/Example.hk:172:10-172:14
, "f" (TokenVarId "f") @example/Example.hk:172:15-172:16
, ")" (TokenRsvp ")") @example/Example.hk:172:16-172:17
, "m" (TokenVarId "m") @example/Example.hk:172:18-172:19
, "=" (TokenRsvp "=") @example/Example.hk:172:20-172:21
, "fmap" (TokenVarId "fmap") @example/Example.hk:172:22-172:26
, "f" (TokenVarId "f") @example/Example.hk:172:27-172:28
, "m" (TokenVarId "m") @example/Example.hk:172:29-172:30
, "" (TokenLn') @example/Example.hk:173:3
, "" (TokenLn) @example/Example.hk:173:3
, "(" (TokenRsvp "(") @example/Example.hk:173:3-173:4
, "<*>" (TokenOpId "<*>") @example/Example.hk:173:4-173:7
, ")" (TokenRsvp ")") @example/Example.hk:173:7-173:8
, "Nothing" (TokenConId "Nothing") @example/Example.hk:173:9-173:16
, "_" (TokenRsvp "_") @example/Example.hk:173:17-173:18
, "=" (TokenRsvp "=") @example/Example.hk:173:20-173:21
, "Nothing" (TokenConId "Nothing") @example/Example.hk:173:22-173:29
, "" (TokenLn') @example/Example.hk:175:1
, "" (TokenBlk') @example/Example.hk:175:1
, "" (TokenLn') @example/Example.hk:175:1 ]
[ "" (TokenLn) @example/Example.hk:175:1
, "Applicative" (TokenConId "Applicative") @example/Example.hk:175:1-175:12
, "Either" (TokenConId "Either") @example/Example.hk:175:13-175:19
, "e" (TokenVarId "e") @example/Example.hk:175:20-175:21
, "where" (TokenVarId "where") @example/Example.hk:175:22-175:27
, "pure" (TokenVarId "pure") @example/Example.hk:176:3-176:7
, "a" (TokenVarId "a") @example/Example.hk:176:8-176:9
, "=" (TokenRsvp "=") @example/Example.hk:176:10-176:11
, "Right" (TokenConId "Right") @example/Example.hk:176:12-176:17
, "a" (TokenVarId "a") @example/Example.hk:176:18-176:19
, "(" (TokenRsvp "(") @example/Example.hk:178:3-178:4
, "<*>" (TokenOpId "<*>") @example/Example.hk:178:4-178:7
, ")" (TokenRsvp ")") @example/Example.hk:178:7-178:8
, "(" (TokenRsvp "(") @example/Example.hk:178:9-178:10
, "Right" (TokenConId "Right") @example/Example.hk:178:10-178:15
, "f" (TokenVarId "f") @example/Example.hk:178:16-178:17
, ")" (TokenRsvp ")") @example/Example.hk:178:17-178:18
, "m" (TokenVarId "m") @example/Example.hk:178:19-178:20
, "=" (TokenRsvp "=") @example/Example.hk:178:21-178:22
, "fmap" (TokenVarId "fmap") @example/Example.hk:178:23-178:27
, "f" (TokenVarId "f") @example/Example.hk:178:28-178:29
, "m" (TokenVarId "m") @example/Example.hk:178:30-178:31
, "(" (TokenRsvp "(") @example/Example.hk:179:3-179:4
, "<*>" (TokenOpId "<*>") @example/Example.hk:179:4-179:7
, ")" (TokenRsvp ")") @example/Example.hk:179:7-179:8
, "(" (TokenRsvp "(") @example/Example.hk:179:9-179:10
, "Left" (TokenConId "Left") @example/Example.hk:179:10-179:14
, "e" (TokenVarId "e") @example/Example.hk:179:15-179:16
, ")" (TokenRsvp ")") @example/Example.hk:179:16-179:17
, "_" (TokenRsvp "_") @example/Example.hk:179:19-179:20
, "=" (TokenRsvp "=") @example/Example.hk:179:21-179:22
, "Left" (TokenConId "Left") @example/Example.hk:179:23-179:27
, "e" (TokenVarId "e") @example/Example.hk:179:28-179:29
, "" (TokenLn') @example/Example.hk:183:1 ]
[ "" (TokenLn) @example/Example.hk:183:1
, "class" (TokenRsvp "class") @example/Example.hk:183:1-183:6
, "Applicative" (TokenConId "Applicative") @example/Example.hk:183:7-183:18
, "m" (TokenVarId "m") @example/Example.hk:183:19-183:20
, "=>" (TokenRsvp "=>") @example/Example.hk:183:21-183:23
, "Monad" (TokenConId "Monad") @example/Example.hk:183:24-183:29
, "m" (TokenVarId "m") @example/Example.hk:183:30-183:31
, "a" (TokenVarId "a") @example/Example.hk:183:32-183:33
, "has" (TokenRsvp "has") @example/Example.hk:183:34-183:37
, "" (TokenBlk) @example/Example.hk:184:3
, "" (TokenLn) @example/Example.hk:184:3
, "(" (TokenRsvp "(") @example/Example.hk:184:3-184:4
, ">>=" (TokenOpId ">>=") @example/Example.hk:184:4-184:7
, ")" (TokenRsvp ")") @example/Example.hk:184:7-184:8
, ":" (TokenRsvp ":") @example/Example.hk:184:9-184:10
, "m" (TokenVarId "m") @example/Example.hk:184:11-184:12
, "a" (TokenVarId "a") @example/Example.hk:184:13-184:14
, "->" (TokenRsvp "->") @example/Example.hk:184:15-184:17
, "(" (TokenRsvp "(") @example/Example.hk:184:18-184:19
, "a" (TokenVarId "a") @example/Example.hk:184:19-184:20
, "->" (TokenRsvp "->") @example/Example.hk:184:21-184:23
, "m" (TokenVarId "m") @example/Example.hk:184:24-184:25
, "b" (TokenVarId "b") @example/Example.hk:184:26-184:27
, ")" (TokenRsvp ")") @example/Example.hk:184:27-184:28
, "->" (TokenRsvp "->") @example/Example.hk:184:29-184:31
, "m" (TokenVarId "m") @example/Example.hk:184:32-184:33
, "b" (TokenVarId "b") @example/Example.hk:184:34-184:35
, "" (TokenLn') @example/Example.hk:186:3
, "" (TokenLn) @example/Example.hk:186:3
, "(" (TokenRsvp "(") @example/Example.hk:186:3-186:4
, ">>" (TokenOpId ">>") @example/Example.hk:186:4-186:6
, ")" (TokenRsvp ")") @example/Example.hk:186:6-186:7
, ":" (TokenRsvp ":") @example/Example.hk:186:8-186:9
, "m" (TokenVarId "m") @example/Example.hk:186:10-186:11
, "a" (TokenVarId "a") @example/Example.hk:186:12-186:13
, "->" (TokenRsvp "->") @example/Example.hk:186:14-186:16
, "m" (TokenVarId "m") @example/Example.hk:186:17-186:18
, "b" (TokenVarId "b") @example/Example.hk:186:19-186:20
, "->" (TokenRsvp "->") @example/Example.hk:186:21-186:23
, "m" (TokenVarId "m") @example/Example.hk:186:24-186:25
, "b" (TokenVarId "b") @example/Example.hk:186:26-186:27
, "" (TokenLn') @example/Example.hk:187:3
, "" (TokenLn) @example/Example.hk:187:3
, "(" (TokenRsvp "(") @example/Example.hk:187:3-187:4
, ">>" (TokenOpId ">>") @example/Example.hk:187:4-187:6
, ")" (TokenRsvp ")") @example/Example.hk:187:6-187:7
, "m" (TokenVarId "m") @example/Example.hk:187:8-187:9
, "k" (TokenVarId "k") @example/Example.hk:187:10-187:11
, "=" (TokenRsvp "=") @example/Example.hk:187:12-187:13
, "m" (TokenVarId "m") @example/Example.hk:187:14-187:15
, ">>=" (TokenOpId ">>=") @example/Example.hk:187:16-187:19
, "\" (TokenRsvp "\\") @example/Example.hk:187:20-187:21
, "_" (TokenRsvp "_") @example/Example.hk:187:21-187:22
, "->" (TokenRsvp "->") @example/Example.hk:187:23-187:25
, "k" (TokenVarId "k") @example/Example.hk:187:26-187:27
, "" (TokenLn') @example/Example.hk:189:3
, "" (TokenLn) @example/Example.hk:189:3
, "return" (TokenVarId "return") @example/Example.hk:189:3-189:9
, ":" (TokenRsvp ":") @example/Example.hk:189:10-189:11
, "a" (TokenVarId "a") @example/Example.hk:189:12-189:13
, "->" (TokenRsvp "->") @example/Example.hk:189:14-189:16
, "m" (TokenVarId "m") @example/Example.hk:189:17-189:18
, "a" (TokenVarId "a") @example/Example.hk:189:19-189:20
, "" (TokenLn') @example/Example.hk:190:3
, "" (TokenLn) @example/Example.hk:190:3
, "return" (TokenVarId "return") @example/Example.hk:190:3-190:9
, "=" (TokenRsvp "=") @example/Example.hk:190:10-190:11
, "pure" (TokenVarId "pure") @example/Example.hk:190:12-190:16
, "" (TokenLn') @example/Example.hk:194:1
, "" (TokenBlk') @example/Example.hk:194:1
, "" (TokenLn') @example/Example.hk:194:1 ]
[ "" (TokenLn) @example/Example.hk:194:1
, "Monad" (TokenConId "Monad") @example/Example.hk:194:1-194:6
, "Box" (TokenConId "Box") @example/Example.hk:194:7-194:10
, "has" (TokenRsvp "has") @example/Example.hk:194:11-194:14
, "" (TokenBlk) @example/Example.hk:195:3
, "" (TokenLn) @example/Example.hk:195:3
, "(" (TokenRsvp "(") @example/Example.hk:195:3-195:4
, "Box" (TokenConId "Box") @example/Example.hk:195:4-195:7
, "x" (TokenVarId "x") @example/Example.hk:195:8-195:9
, ")" (TokenRsvp ")") @example/Example.hk:195:9-195:10
, ">>=" (TokenOpId ">>=") @example/Example.hk:195:11-195:14
, "k" (TokenVarId "k") @example/Example.hk:195:15-195:16
, "=" (TokenRsvp "=") @example/Example.hk:195:17-195:18
, "k" (TokenVarId "k") @example/Example.hk:195:19-195:20
, "x" (TokenVarId "x") @example/Example.hk:195:21-195:22
, "" (TokenLn') @example/Example.hk:197:1
, "" (TokenBlk') @example/Example.hk:197:1
, "" (TokenLn') @example/Example.hk:197:1 ]
[ "" (TokenLn) @example/Example.hk:197:1
, "Monad" (TokenConId "Monad") @example/Example.hk:197:1-197:6
, "Linear" (TokenConId "Linear") @example/Example.hk:197:7-197:13
, "has" (TokenRsvp "has") @example/Example.hk:197:14-197:17
, "" (TokenBlk) @example/Example.hk:198:3
, "" (TokenLn) @example/Example.hk:198:3
, "(" (TokenRsvp "(") @example/Example.hk:198:3-198:4
, "Linear" (TokenConId "Linear") @example/Example.hk:198:4-198:10
, "x" (TokenVarId "x") @example/Example.hk:198:11-198:12
, ")" (TokenRsvp ")") @example/Example.hk:198:12-198:13
, ">>=" (TokenOpId ">>=") @example/Example.hk:198:14-198:17
, "k" (TokenVarId "k") @example/Example.hk:198:18-198:19
, "=" (TokenRsvp "=") @example/Example.hk:198:20-198:21
, "k" (TokenVarId "k") @example/Example.hk:198:22-198:23
, "x" (TokenVarId "x") @example/Example.hk:198:24-198:25
, "" (TokenLn') @example/Example.hk:200:1
, "" (TokenBlk') @example/Example.hk:200:1
, "" (TokenLn') @example/Example.hk:200:1 ]
[ "" (TokenLn) @example/Example.hk:200:1
, "Monad" (TokenConId "Monad") @example/Example.hk:200:1-200:6
, "Maybe" (TokenConId "Maybe") @example/Example.hk:200:7-200:12
, "has" (TokenRsvp "has") @example/Example.hk:200:13-200:16
, "" (TokenBlk) @example/Example.hk:201:3
, "" (TokenLn) @example/Example.hk:201:3
, "(" (TokenRsvp "(") @example/Example.hk:201:3-201:4
, "Just" (TokenConId "Just") @example/Example.hk:201:4-201:8
, "x" (TokenVarId "x") @example/Example.hk:201:9-201:10
, ")" (TokenRsvp ")") @example/Example.hk:201:10-201:11
, ">>=" (TokenOpId ">>=") @example/Example.hk:201:12-201:15
, "k" (TokenVarId "k") @example/Example.hk:201:16-201:17
, "=" (TokenRsvp "=") @example/Example.hk:201:18-201:19
, "k" (TokenVarId "k") @example/Example.hk:201:20-201:21
, "x" (TokenVarId "x") @example/Example.hk:201:22-201:23
, "" (TokenLn') @example/Example.hk:202:3
, "" (TokenLn) @example/Example.hk:202:3
, "Nothing" (TokenConId "Nothing") @example/Example.hk:202:3-202:10
, ">>=" (TokenOpId ">>=") @example/Example.hk:202:11-202:14
, "_" (TokenRsvp "_") @example/Example.hk:202:15-202:16
, "=" (TokenRsvp "=") @example/Example.hk:202:17-202:18
, "Nothing" (TokenConId "Nothing") @example/Example.hk:202:19-202:26
, "" (TokenLn') @example/Example.hk:204:1
, "" (TokenBlk') @example/Example.hk:204:1
, "" (TokenLn') @example/Example.hk:204:1 ]
[ "" (TokenLn) @example/Example.hk:204:1
, "Monad" (TokenConId "Monad") @example/Example.hk:204:1-204:6
, "Either" (TokenConId "Either") @example/Example.hk:204:7-204:13
, "e" (TokenVarId "e") @example/Example.hk:204:14-204:15
, "has" (TokenRsvp "has") @example/Example.hk:204:16-204:19
, "" (TokenBlk) @example/Example.hk:205:3
, "" (TokenLn) @example/Example.hk:205:3
, "(" (TokenRsvp "(") @example/Example.hk:205:3-205:4
, "Left" (TokenConId "Left") @example/Example.hk:205:4-205:8
, "e" (TokenVarId "e") @example/Example.hk:205:9-205:10
, ")" (TokenRsvp ")") @example/Example.hk:205:10-205:11
, ">>=" (TokenOpId ">>=") @example/Example.hk:205:12-205:15
, "k" (TokenVarId "k") @example/Example.hk:205:16-205:17
, "=" (TokenRsvp "=") @example/Example.hk:205:18-205:19
, "Left" (TokenConId "Left") @example/Example.hk:205:20-205:24
, "e" (TokenVarId "e") @example/Example.hk:205:25-205:26
, "" (TokenLn') @example/Example.hk:206:3
, "" (TokenLn) @example/Example.hk:206:3
, "(" (TokenRsvp "(") @example/Example.hk:206:3-206:4
, "Right" (TokenConId "Right") @example/Example.hk:206:4-206:9
, "x" (TokenVarId "x") @example/Example.hk:206:10-206:11
, ")" (TokenRsvp ")") @example/Example.hk:206:11-206:12
, ">>=" (TokenOpId ">>=") @example/Example.hk:206:13-206:16
, "k" (TokenVarId "k") @example/Example.hk:206:17-206:18
, "=" (TokenRsvp "=") @example/Example.hk:206:19-206:20
, "k" (TokenVarId "k") @example/Example.hk:206:21-206:22
, "x" (TokenVarId "x") @example/Example.hk:206:23-206:24
, "" (TokenLn') @example/Example.hk:211:1
, "" (TokenBlk') @example/Example.hk:211:1
, "" (TokenLn') @example/Example.hk:211:1 ]
[ "" (TokenLn) @example/Example.hk:211:1
, "Rep" (TokenConId "Rep") @example/Example.hk:211:1-211:4
, "=" (TokenRsvp "=") @example/Example.hk:212:3-212:4
, "AdjecencyList" (TokenConId "AdjecencyList") @example/Example.hk:212:5-212:18
, "|" (TokenRsvp "|") @example/Example.hk:213:3-213:4
, "EdgeList" (TokenConId "EdgeList") @example/Example.hk:213:5-213:13
, "|" (TokenRsvp "|") @example/Example.hk:214:3-214:4
, "Matrix" (TokenConId "Matrix") @example/Example.hk:214:5-214:11
, "" (TokenLn') @example/Example.hk:216:1 ]
[ "" (TokenLn) @example/Example.hk:216:1
, "IntGraph" (TokenConId "IntGraph") @example/Example.hk:216:1-216:9
, "=" (TokenRsvp "=") @example/Example.hk:216:10-216:11
, "IntGraph" (TokenConId "IntGraph") @example/Example.hk:216:12-216:20
, "{" (TokenRsvp "{") @example/Example.hk:216:21-216:22
, "edges" (TokenVarId "edges") @example/Example.hk:216:23-216:28
, ":" (TokenRsvp ":") @example/Example.hk:216:29-216:30
, "[" (TokenRsvp "[") @example/Example.hk:216:31-216:32
, "[" (TokenRsvp "[") @example/Example.hk:216:32-216:33
, "Int" (TokenConId "Int") @example/Example.hk:216:33-216:36
, "]" (TokenRsvp "]") @example/Example.hk:216:36-216:37
, "]" (TokenRsvp "]") @example/Example.hk:216:37-216:38
, "}" (TokenRsvp "}") @example/Example.hk:216:39-216:40
, "" (TokenLn') @example/Example.hk:218:1 ]
[ "" (TokenLn) @example/Example.hk:218:1
, "class" (TokenRsvp "class") @example/Example.hk:218:1-218:6
, "Graph" (TokenConId "Graph") @example/Example.hk:218:7-218:12
, "g" (TokenVarId "g") @example/Example.hk:218:13-218:14
, "has" (TokenRsvp "has") @example/Example.hk:218:15-218:18
, "" (TokenBlk) @example/Example.hk:219:3
, "" (TokenLn) @example/Example.hk:219:3
, "size" (TokenVarId "size") @example/Example.hk:219:3-219:7
, ":" (TokenRsvp ":") @example/Example.hk:219:8-219:9
, "g" (TokenVarId "g") @example/Example.hk:219:10-219:11
, "->" (TokenRsvp "->") @example/Example.hk:219:12-219:14
, "Int" (TokenConId "Int") @example/Example.hk:219:15-219:18
, "" (TokenLn') @example/Example.hk:220:3
, "" (TokenLn) @example/Example.hk:220:3
, "bfs" (TokenVarId "bfs") @example/Example.hk:220:3-220:6
, ":" (TokenRsvp ":") @example/Example.hk:220:7-220:8
, "g" (TokenVarId "g") @example/Example.hk:220:9-220:10
, "->" (TokenRsvp "->") @example/Example.hk:220:11-220:13
, "Int" (TokenConId "Int") @example/Example.hk:220:14-220:17
, "->" (TokenRsvp "->") @example/Example.hk:220:18-220:20
, "(" (TokenRsvp "(") @example/Example.hk:220:21-220:22
, "[" (TokenRsvp "[") @example/Example.hk:220:22-220:23
, "Int" (TokenConId "Int") @example/Example.hk:220:23-220:26
, "]" (TokenRsvp "]") @example/Example.hk:220:26-220:27
, "," (TokenRsvp ",") @example/Example.hk:220:27-220:28
, "[" (TokenRsvp "[") @example/Example.hk:220:29-220:30
, "Int" (TokenConId "Int") @example/Example.hk:220:30-220:33
, "]" (TokenRsvp "]") @example/Example.hk:220:33-220:34
, "," (TokenRsvp ",") @example/Example.hk:220:34-220:35
, "[" (TokenRsvp "[") @example/Example.hk:220:36-220:37
, "Int" (TokenConId "Int") @example/Example.hk:220:37-220:40
, "]" (TokenRsvp "]") @example/Example.hk:220:40-220:41
, ")" (TokenRsvp ")") @example/Example.hk:220:41-220:42
, "" (TokenLn') @example/Example.hk:223:1
, "" (TokenBlk') @example/Example.hk:223:1
, "" (TokenLn') @example/Example.hk:223:1 ]
[ "" (TokenLn) @example/Example.hk:223:1
, "Graph" (TokenConId "Graph") @example/Example.hk:223:1-223:6
, "IntGraph" (TokenConId "IntGraph") @example/Example.hk:223:7-223:15
, "has" (TokenRsvp "has") @example/Example.hk:223:16-223:19
, "" (TokenBlk) @example/Example.hk:224:3
, "" (TokenLn) @example/Example.hk:224:3
, "size" (TokenVarId "size") @example/Example.hk:224:3-224:7
, "g" (TokenVarId "g") @example/Example.hk:224:8-224:9
, "=" (TokenRsvp "=") @example/Example.hk:224:10-224:11
, "size" (TokenVarId "size") @example/Example.hk:224:12-224:16
, "." (TokenRsvp ".") @example/Example.hk:224:17-224:18
, "edges" (TokenVarId "edges") @example/Example.hk:224:19-224:24
, "$" (TokenOpId "$") @example/Example.hk:224:25-224:26
, "g" (TokenVarId "g") @example/Example.hk:224:27-224:28
, "" (TokenLn') @example/Example.hk:225:3
, "" (TokenLn) @example/Example.hk:225:3
, "bfs" (TokenVarId "bfs") @example/Example.hk:225:3-225:6
, "g" (TokenVarId "g") @example/Example.hk:225:7-225:8
, "s" (TokenVarId "s") @example/Example.hk:225:9-225:10
, "=" (TokenRsvp "=") @example/Example.hk:225:11-225:12
, "do" (TokenRsvp "do") @example/Example.hk:225:13-225:15
, "" (TokenBlk) @example/Example.hk:226:5
, "" (TokenLn) @example/Example.hk:226:5
, "par" (TokenVarId "par") @example/Example.hk:226:5-226:8
, "<-" (TokenRsvp "<-") @example/Example.hk:226:9-226:11
, "Array" (TokenConId "Array") @example/Example.hk:226:12-226:17
, "(" (TokenRsvp "(") @example/Example.hk:226:18-226:19
, "size" (TokenVarId "size") @example/Example.hk:226:19-226:23
, "g" (TokenVarId "g") @example/Example.hk:226:24-226:25
, ")" (TokenRsvp ")") @example/Example.hk:226:25-226:26
, ":" (TokenRsvp ":") @example/Example.hk:226:27-226:28
, "[" (TokenRsvp "[") @example/Example.hk:226:29-226:30
, "Int" (TokenConId "Int") @example/Example.hk:226:30-226:33
, "]" (TokenRsvp "]") @example/Example.hk:226:33-226:34
, "" (TokenLn') @example/Example.hk:227:5
, "" (TokenLn) @example/Example.hk:227:5
, "dist" (TokenVarId "dist") @example/Example.hk:227:5-227:9
, "<-" (TokenRsvp "<-") @example/Example.hk:227:10-227:12
, "Array" (TokenConId "Array") @example/Example.hk:227:13-227:18
, "(" (TokenRsvp "(") @example/Example.hk:227:19-227:20
, "size" (TokenVarId "size") @example/Example.hk:227:20-227:24
, "g" (TokenVarId "g") @example/Example.hk:227:25-227:26
, ")" (TokenRsvp ")") @example/Example.hk:227:26-227:27
, ":" (TokenRsvp ":") @example/Example.hk:227:28-227:29
, "[" (TokenRsvp "[") @example/Example.hk:227:30-227:31
, "Int" (TokenConId "Int") @example/Example.hk:227:31-227:34
, "]" (TokenRsvp "]") @example/Example.hk:227:34-227:35
, "" (TokenLn') @example/Example.hk:228:5
, "" (TokenLn) @example/Example.hk:228:5
, "q" (TokenVarId "q") @example/Example.hk:228:5-228:6
, "<-" (TokenRsvp "<-") @example/Example.hk:228:7-228:9
, "Array" (TokenConId "Array") @example/Example.hk:228:10-228:15
, "(" (TokenRsvp "(") @example/Example.hk:228:16-228:17
, "size" (TokenVarId "size") @example/Example.hk:228:17-228:21
, "g" (TokenVarId "g") @example/Example.hk:228:22-228:23
, ")" (TokenRsvp ")") @example/Example.hk:228:23-228:24
, ":" (TokenRsvp ":") @example/Example.hk:228:25-228:26
, "[" (TokenRsvp "[") @example/Example.hk:228:27-228:28
, "Int" (TokenConId "Int") @example/Example.hk:228:28-228:31
, "]" (TokenRsvp "]") @example/Example.hk:228:31-228:32
, "" (TokenLn') @example/Example.hk:234:5
, "" (TokenLn) @example/Example.hk:234:5
, "return" (TokenVarId "return") @example/Example.hk:234:5-234:11
, "(" (TokenRsvp "(") @example/Example.hk:234:12-234:13
, "[" (TokenRsvp "[") @example/Example.hk:234:13-234:14
, "]" (TokenRsvp "]") @example/Example.hk:234:14-234:15
, "," (TokenRsvp ",") @example/Example.hk:234:15-234:16
, "[" (TokenRsvp "[") @example/Example.hk:234:17-234:18
, "]" (TokenRsvp "]") @example/Example.hk:234:18-234:19
, "," (TokenRsvp ",") @example/Example.hk:234:19-234:20
, "[" (TokenRsvp "[") @example/Example.hk:234:21-234:22
, "]" (TokenRsvp "]") @example/Example.hk:234:22-234:23
, ")" (TokenRsvp ")") @example/Example.hk:234:23-234:24
, "" (TokenLn') @example/Example.hk:241:1
, "" (TokenBlk') @example/Example.hk:241:1
, "" (TokenLn') @example/Example.hk:241:1
, "" (TokenBlk') @example/Example.hk:241:1
, "" (TokenLn') @example/Example.hk:241:1 ]
[ "" (TokenLn) @example/Example.hk:241:1
, "readFile" (TokenVarId "readFile") @example/Example.hk:241:1-241:9
, ":" (TokenRsvp ":") @example/Example.hk:241:10-241:11
, "String" (TokenConId "String") @example/Example.hk:241:12-241:18
, "->" (TokenRsvp "->") @example/Example.hk:241:19-241:21
, "IO" (TokenConId "IO") @example/Example.hk:241:22-241:24
, "String" (TokenConId "String") @example/Example.hk:241:25-241:31
, "" (TokenLn') @example/Example.hk:248:1 ]
[ "" (TokenLn) @example/Example.hk:248:1
, "myGame" (TokenVarId "myGame") @example/Example.hk:248:1-248:7
, ":" (TokenRsvp ":") @example/Example.hk:248:8-248:9
, "CellT" (TokenConId "CellT") @example/Example.hk:248:10-248:15
, "IO" (TokenConId "IO") @example/Example.hk:248:16-248:18
, "(" (TokenRsvp "(") @example/Example.hk:248:19-248:20
, ")" (TokenRsvp ")") @example/Example.hk:248:20-248:21
, "" (TokenLn') @example/Example.hk:248:20 ]


Beginning Parsing:


Definitions Parsed:
$ : (a -> b)
readFile : String -> IO String


Errors Parsing:
Unexpected tokens: "[ "=" (TokenRsvp "=") @example/Example.hk:37:4-37:5
, ")" (TokenRsvp ")") @example/Example.hk:37:5-37:6
, ":" (TokenRsvp ":") @example/Example.hk:37:7-37:8
, "f" (TokenVarId "f") @example/Example.hk:37:10-37:11
, "a" (TokenVarId "a") @example/Example.hk:37:12-37:13
, "->" (TokenRsvp "->") @example/Example.hk:38:7-38:9
, "f" (TokenVarId "f") @example/Example.hk:38:10-38:11
, "a" (TokenVarId "a") @example/Example.hk:38:12-38:13
, "->" (TokenRsvp "->") @example/Example.hk:39:7-39:9
, "f" (TokenVarId "f") @example/Example.hk:39:10-39:11
, "a" (TokenVarId "a") @example/Example.hk:39:12-39:13
, "" (TokenLn') @example/Example.hk:41:1
, "" (TokenBlk') @example/Example.hk:41:1
, "" (TokenLn') @example/Example.hk:41:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "Assigns" (TokenConId "Assigns") @example/Example.hk:41:10-41:17
, "Cell" (TokenConId "Cell") @example/Example.hk:41:18-41:22
, "has" (TokenRsvp "has") @example/Example.hk:41:23-41:26
, "" (TokenBlk) @example/Example.hk:42:3
, "" (TokenLn) @example/Example.hk:42:3
, "(" (TokenRsvp "(") @example/Example.hk:42:3-42:4
, "=" (TokenRsvp "=") @example/Example.hk:42:4-42:5
, ")" (TokenRsvp ")") @example/Example.hk:42:5-42:6
, ":" (TokenRsvp ":") @example/Example.hk:42:7-42:8
, "Cell" (TokenConId "Cell") @example/Example.hk:42:10-42:14
, "a" (TokenVarId "a") @example/Example.hk:42:15-42:16
, "->" (TokenRsvp "->") @example/Example.hk:43:7-43:9
, "Cell" (TokenConId "Cell") @example/Example.hk:43:10-43:14
, "a" (TokenVarId "a") @example/Example.hk:43:15-43:16
, "->" (TokenRsvp "->") @example/Example.hk:44:7-44:9
, "Cell" (TokenConId "Cell") @example/Example.hk:44:10-44:14
, "a" (TokenVarId "a") @example/Example.hk:44:15-44:16
, "" (TokenLn') @example/Example.hk:61:1
, "" (TokenBlk') @example/Example.hk:61:1
, "" (TokenLn') @example/Example.hk:61:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "putStr" (TokenVarId "putStr") @example/Example.hk:61:22-61:28
, ":" (TokenRsvp ":") @example/Example.hk:61:29-61:30
, "String" (TokenConId "String") @example/Example.hk:61:31-61:37
, "->" (TokenRsvp "->") @example/Example.hk:61:38-61:40
, "(" (TokenRsvp "(") @example/Example.hk:61:41-61:42
, ")" (TokenRsvp ")") @example/Example.hk:61:42-61:43
, "" (TokenLn') @example/Example.hk:64:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "|" (TokenRsvp "|") @example/Example.hk:64:13-64:14
, "False" (TokenConId "False") @example/Example.hk:64:15-64:20
, "" (TokenLn') @example/Example.hk:67:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "{" (TokenRsvp "{") @example/Example.hk:67:11-67:12
, "id" (TokenVarId "id") @example/Example.hk:67:13-67:15
, ":" (TokenRsvp ":") @example/Example.hk:67:16-67:17
, "a" (TokenVarId "a") @example/Example.hk:67:18-67:19
, "}" (TokenRsvp "}") @example/Example.hk:67:20-67:21
, "" (TokenLn') @example/Example.hk:70:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "{" (TokenRsvp "{") @example/Example.hk:70:15-70:16
, "mutable" (TokenVarId "mutable") @example/Example.hk:70:17-70:24
, ":" (TokenRsvp ":") @example/Example.hk:70:25-70:26
, "a" (TokenVarId "a") @example/Example.hk:70:27-70:28
, "}" (TokenRsvp "}") @example/Example.hk:70:29-70:30
, "" (TokenLn') @example/Example.hk:73:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "{" (TokenRsvp "{") @example/Example.hk:73:13-73:14
, "modify" (TokenVarId "modify") @example/Example.hk:73:15-73:21
, ":" (TokenRsvp ":") @example/Example.hk:73:22-73:23
, "a" (TokenVarId "a") @example/Example.hk:73:24-73:25
, "}" (TokenRsvp "}") @example/Example.hk:73:26-73:27
, "" (TokenLn') @example/Example.hk:76:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "{" (TokenRsvp "{") @example/Example.hk:76:13-76:14
, "deref" (TokenVarId "deref") @example/Example.hk:76:15-76:20
, ":" (TokenRsvp ":") @example/Example.hk:76:21-76:22
, "a" (TokenVarId "a") @example/Example.hk:76:23-76:24
, "}" (TokenRsvp "}") @example/Example.hk:76:25-76:26
, "" (TokenLn') @example/Example.hk:79:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "{" (TokenRsvp "{") @example/Example.hk:79:15-79:16
, "unsafe" (TokenVarId "unsafe") @example/Example.hk:79:17-79:23
, ":" (TokenRsvp ":") @example/Example.hk:79:24-79:25
, "a" (TokenVarId "a") @example/Example.hk:79:26-79:27
, "}" (TokenRsvp "}") @example/Example.hk:79:28-79:29
, "" (TokenLn') @example/Example.hk:84:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "{" (TokenRsvp "{") @example/Example.hk:84:19-84:20
, "consume" (TokenVarId "consume") @example/Example.hk:84:21-84:28
, ":" (TokenRsvp ":") @example/Example.hk:84:29-84:30
, "a" (TokenVarId "a") @example/Example.hk:84:31-84:32
, "}" (TokenRsvp "}") @example/Example.hk:84:33-84:34
, "" (TokenLn') @example/Example.hk:87:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "|" (TokenRsvp "|") @example/Example.hk:87:19-87:20
, "Just" (TokenConId "Just") @example/Example.hk:87:21-87:25
, "a" (TokenVarId "a") @example/Example.hk:87:26-87:27
, "" (TokenLn') @example/Example.hk:88:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "|" (TokenRsvp "|") @example/Example.hk:88:21-88:22
, "Right" (TokenConId "Right") @example/Example.hk:88:23-88:28
, "b" (TokenVarId "b") @example/Example.hk:88:29-88:30
, "" (TokenLn') @example/Example.hk:96:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "-------------------------------------" (TokenOpId "-------------------------------------") @example/Example.hk:96:1-96:38
, "" (TokenLn') @example/Example.hk:98:1 ]"
Expected tokens: "[ Fixity Declaration
, Foreign Function
, Class Instance
, Class
, DataType
, Type Alias
, Signature
, Function
, Top-Level Definition ]"
Unexpected tokens: "[ ":" (TokenRsvp ":") @example/Example.hk:101:6-101:7
, "cat" (TokenVarId "cat") @example/Example.hk:101:8-101:11
, "a" (TokenVarId "a") @example/Example.hk:101:12-101:13
, "a" (TokenVarId "a") @example/Example.hk:101:14-101:15
, "(" (TokenRsvp "(") @example/Example.hk:102:3-102:4
, "." (TokenRsvp ".") @example/Example.hk:102:4-102:5
, ")" (TokenRsvp ")") @example/Example.hk:102:5-102:6
, ":" (TokenRsvp ":") @example/Example.hk:102:7-102:8
, "cat" (TokenVarId "cat") @example/Example.hk:102:9-102:12
, "" (TokenLn') @example/Example.hk:104:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "->" (TokenRsvp "->") @example/Example.hk:104:11-104:13
, ")" (TokenRsvp ")") @example/Example.hk:104:13-104:14
, "where" (TokenVarId "where") @example/Example.hk:104:15-104:20
, "id" (TokenVarId "id") @example/Example.hk:105:3-105:5
, "=" (TokenRsvp "=") @example/Example.hk:105:6-105:7
, "\" (TokenRsvp "\\") @example/Example.hk:105:8-105:9
, "a" (TokenVarId "a") @example/Example.hk:105:9-105:10
, "->" (TokenRsvp "->") @example/Example.hk:105:11-105:13
, "a" (TokenVarId "a") @example/Example.hk:105:14-105:15
, "(" (TokenRsvp "(") @example/Example.hk:106:3-106:4
, "." (TokenRsvp ".") @example/Example.hk:106:4-106:5
, ")" (TokenRsvp ")") @example/Example.hk:106:5-106:6
, "g" (TokenVarId "g") @example/Example.hk:106:7-106:8
, "f" (TokenVarId "f") @example/Example.hk:106:9-106:10
, "a" (TokenVarId "a") @example/Example.hk:106:11-106:12
, "=" (TokenRsvp "=") @example/Example.hk:106:13-106:14
, "g" (TokenVarId "g") @example/Example.hk:106:15-106:16
, "(" (TokenRsvp "(") @example/Example.hk:106:17-106:18
, "f" (TokenVarId "f") @example/Example.hk:106:18-106:19
, "a" (TokenVarId "a") @example/Example.hk:106:20-106:21
, ")" (TokenRsvp ")") @example/Example.hk:106:21-106:22
, "" (TokenLn') @example/Example.hk:109:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "-------------------------------------" (TokenOpId "-------------------------------------") @example/Example.hk:109:1-109:38
, "" (TokenLn') @example/Example.hk:113:1 ]"
Expected tokens: "[ Fixity Declaration
, Foreign Function
, Class Instance
, Class
, DataType
, Type Alias
, Signature
, Function
, Top-Level Definition ]"
Unexpected tokens: "[ "-------------------------------------" (TokenOpId "-------------------------------------") @example/Example.hk:113:1-113:38
, "" (TokenLn') @example/Example.hk:116:1 ]"
Expected tokens: "[ Fixity Declaration
, Foreign Function
, Class Instance
, Class
, DataType
, Type Alias
, Signature
, Function
, Top-Level Definition ]"
Severe Parser Error: Ambiguous grammar encountered. Please report.
class Functor f where  fmap : (a -> b) -> f a -> f b
class Functor f where  fmap : (a -> b) -> f a -> f b
Severe Parser Error: Ambiguous grammar encountered. Please report.
Functor Box where  fmap f Box x = Box (f x)
Functor Box where  fmap f Box x = Box (f x)
Severe Parser Error: Ambiguous grammar encountered. Please report.
Functor Linear where  fmap f Linear x = Linear (f x)
Functor Linear where  fmap f Linear x = Linear (f x)
Unexpected tokens: "[ "Nothing" (TokenConId "Nothing") @example/Example.hk:128:10-128:17
, "=" (TokenRsvp "=") @example/Example.hk:128:18-128:19
, "Nothing" (TokenConId "Nothing") @example/Example.hk:128:20-128:27
, "" (TokenLn') @example/Example.hk:129:3
, "" (TokenLn) @example/Example.hk:129:3
, "fmap" (TokenVarId "fmap") @example/Example.hk:129:3-129:7
, "f" (TokenVarId "f") @example/Example.hk:129:8-129:9
, "(" (TokenRsvp "(") @example/Example.hk:129:10-129:11
, "Just" (TokenConId "Just") @example/Example.hk:129:11-129:15
, "a" (TokenVarId "a") @example/Example.hk:129:16-129:17
, ")" (TokenRsvp ")") @example/Example.hk:129:17-129:18
, "=" (TokenRsvp "=") @example/Example.hk:129:19-129:20
, "Just" (TokenConId "Just") @example/Example.hk:129:21-129:25
, "(" (TokenRsvp "(") @example/Example.hk:129:26-129:27
, "f" (TokenVarId "f") @example/Example.hk:129:27-129:28
, "a" (TokenVarId "a") @example/Example.hk:129:29-129:30
, ")" (TokenRsvp ")") @example/Example.hk:129:30-129:31
, "" (TokenLn') @example/Example.hk:131:1
, "" (TokenBlk') @example/Example.hk:131:1
, "" (TokenLn') @example/Example.hk:131:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "Left" (TokenConId "Left") @example/Example.hk:134:7-134:11
, "x" (TokenVarId "x") @example/Example.hk:134:12-134:13
, "->" (TokenRsvp "->") @example/Example.hk:134:14-134:16
, "Left" (TokenConId "Left") @example/Example.hk:134:17-134:21
, "x" (TokenVarId "x") @example/Example.hk:134:22-134:23
, "Right" (TokenConId "Right") @example/Example.hk:135:7-135:12
, "a" (TokenVarId "a") @example/Example.hk:135:13-135:14
, "->" (TokenRsvp "->") @example/Example.hk:135:15-135:17
, "Right" (TokenConId "Right") @example/Example.hk:135:18-135:23
, "a" (TokenVarId "a") @example/Example.hk:135:24-135:25
, "" (TokenLn') @example/Example.hk:137:1
, "" (TokenBlk') @example/Example.hk:137:1
, "" (TokenLn') @example/Example.hk:137:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "<-" (TokenRsvp "<-") @example/Example.hk:139:13-139:15
, "[" (TokenRsvp "[") @example/Example.hk:139:16-139:17
, "]" (TokenRsvp "]") @example/Example.hk:139:17-139:18
, "5" (TokenInteger 5) @example/Example.hk:139:19-139:20
, ":" (TokenRsvp ":") @example/Example.hk:139:21-139:22
, "[" (TokenRsvp "[") @example/Example.hk:139:23-139:24
, "b" (TokenVarId "b") @example/Example.hk:139:24-139:25
, "]" (TokenRsvp "]") @example/Example.hk:139:25-139:26
, "loop" (TokenVarId "loop") @example/Example.hk:140:9-140:13
, ":" (TokenRsvp ":") @example/Example.hk:140:14-140:15
, "Int" (TokenConId "Int") @example/Example.hk:140:16-140:19
, "->" (TokenRsvp "->") @example/Example.hk:140:20-140:22
, "[" (TokenRsvp "[") @example/Example.hk:140:23-140:24
, "b" (TokenVarId "b") @example/Example.hk:140:24-140:25
, "]" (TokenRsvp "]") @example/Example.hk:140:25-140:26
, "loop" (TokenVarId "loop") @example/Example.hk:141:9-141:13
, "0" (TokenInteger 0) @example/Example.hk:141:14-141:15
, "=" (TokenRsvp "=") @example/Example.hk:141:16-141:17
, "xs'" (TokenVarId "xs'") @example/Example.hk:141:18-141:21
, "loop" (TokenVarId "loop") @example/Example.hk:142:9-142:13
, "i" (TokenVarId "i") @example/Example.hk:142:14-142:15
, "=" (TokenRsvp "=") @example/Example.hk:142:16-142:17
, "let" (TokenVarId "let") @example/Example.hk:143:13-143:16
, "x'" (TokenVarId "x'") @example/Example.hk:143:17-143:19
, "<-" (TokenRsvp "<-") @example/Example.hk:143:20-143:22
, "f" (TokenVarId "f") @example/Example.hk:143:23-143:24
, "xs" (TokenVarId "xs") @example/Example.hk:143:25-143:27
, "[" (TokenRsvp "[") @example/Example.hk:143:27-143:28
, "i" (TokenVarId "i") @example/Example.hk:143:28-143:29
, "]" (TokenRsvp "]") @example/Example.hk:143:29-143:30
, "xs'" (TokenVarId "xs'") @example/Example.hk:144:17-144:20
, "[" (TokenRsvp "[") @example/Example.hk:144:20-144:21
, "i" (TokenVarId "i") @example/Example.hk:144:21-144:22
, "]" (TokenRsvp "]") @example/Example.hk:144:22-144:23
, "=" (TokenRsvp "=") @example/Example.hk:144:24-144:25
, "x" (TokenVarId "x") @example/Example.hk:144:26-144:27
, "in" (TokenVarId "in") @example/Example.hk:145:13-145:15
, "fmap'" (TokenVarId "fmap'") @example/Example.hk:145:16-145:21
, "(" (TokenRsvp "(") @example/Example.hk:145:22-145:23
, "xs'" (TokenVarId "xs'") @example/Example.hk:145:23-145:26
, "(" (TokenRsvp "(") @example/Example.hk:145:26-145:27
, "i" (TokenVarId "i") @example/Example.hk:145:27-145:28
, "-" (TokenOpId "-") @example/Example.hk:145:28-145:29
, "1" (TokenInteger 1) @example/Example.hk:145:29-145:30
, ")" (TokenRsvp ")") @example/Example.hk:145:30-145:31
, "in" (TokenVarId "in") @example/Example.hk:146:5-146:7
, "loop" (TokenVarId "loop") @example/Example.hk:146:8-146:12
, "(" (TokenRsvp "(") @example/Example.hk:146:13-146:14
, "size" (TokenVarId "size") @example/Example.hk:146:14-146:18
, "xs" (TokenVarId "xs") @example/Example.hk:146:19-146:21
, ")" (TokenRsvp ")") @example/Example.hk:146:21-146:22
, "xs'" (TokenVarId "xs'") @example/Example.hk:148:5-148:8
, "<-" (TokenRsvp "<-") @example/Example.hk:148:9-148:11
, "Arr" (TokenConId "Arr") @example/Example.hk:148:12-148:15
, "(" (TokenRsvp "(") @example/Example.hk:148:16-148:17
, "size" (TokenVarId "size") @example/Example.hk:148:17-148:21
, "xs" (TokenVarId "xs") @example/Example.hk:148:22-148:24
, ")" (TokenRsvp ")") @example/Example.hk:148:24-148:25
, "[" (TokenRsvp "[") @example/Example.hk:148:26-148:27
, "]" (TokenRsvp "]") @example/Example.hk:148:27-148:28
, "go" (TokenVarId "go") @example/Example.hk:149:5-149:7
, "<-" (TokenRsvp "<-") @example/Example.hk:149:8-149:10
, "(" (TokenRsvp "(") @example/Example.hk:149:11-149:12
, "\" (TokenRsvp "\\") @example/Example.hk:149:13-149:14
, "i" (TokenVarId "i") @example/Example.hk:149:14-149:15
, "->" (TokenRsvp "->") @example/Example.hk:149:16-149:18
, "xs'" (TokenVarId "xs'") @example/Example.hk:149:19-149:22
, "[" (TokenRsvp "[") @example/Example.hk:149:22-149:23
, "i" (TokenVarId "i") @example/Example.hk:149:23-149:24
, "]" (TokenRsvp "]") @example/Example.hk:149:24-149:25
, "=" (TokenRsvp "=") @example/Example.hk:149:26-149:27
, "f" (TokenVarId "f") @example/Example.hk:149:28-149:29
, "xs" (TokenVarId "xs") @example/Example.hk:149:30-149:32
, "[" (TokenRsvp "[") @example/Example.hk:149:32-149:33
, "i" (TokenVarId "i") @example/Example.hk:149:33-149:34
, "]" (TokenRsvp "]") @example/Example.hk:149:34-149:35
, ";" (TokenRsvp ";") @example/Example.hk:149:35-149:36
, "go" (TokenVarId "go") @example/Example.hk:149:37-149:39
, "(" (TokenRsvp "(") @example/Example.hk:149:40-149:41
, "i" (TokenVarId "i") @example/Example.hk:149:41-149:42
, "-" (TokenOpId "-") @example/Example.hk:149:42-149:43
, "1" (TokenInteger 1) @example/Example.hk:149:43-149:44
, ")" (TokenRsvp ")") @example/Example.hk:149:44-149:45
, ")" (TokenRsvp ")") @example/Example.hk:149:45-149:46
, "go" (TokenVarId "go") @example/Example.hk:150:5-150:7
, "(" (TokenRsvp "(") @example/Example.hk:150:8-150:9
, "size" (TokenVarId "size") @example/Example.hk:150:9-150:13
, "xs" (TokenVarId "xs") @example/Example.hk:150:14-150:16
, ")" (TokenRsvp ")") @example/Example.hk:150:16-150:17
, "xs'" (TokenVarId "xs'") @example/Example.hk:151:5-151:8
, "" (TokenLn') @example/Example.hk:155:1
, "" (TokenBlk') @example/Example.hk:155:1
, "" (TokenLn') @example/Example.hk:155:1 ]"
Expected tokens: "[ wildcard expression
, parenthetical expression
, operator
, operator
, value
, operator
, constructor
, variable ]"
Severe Parser Error: Ambiguous grammar encountered. Please report.
class (Functor f) => Applicative f where  pure : a -> f a
                                          <*> : f (a -> b) -> f a -> f b
class (Functor f) => Applicative f where  pure : a -> f a
                                          <*> : f (a -> b) -> f a -> f b
Unexpected tokens: "[ "(" (TokenRsvp "(") @example/Example.hk:163:3-163:4
, "<*>" (TokenOpId "<*>") @example/Example.hk:163:4-163:7
, ")" (TokenRsvp ")") @example/Example.hk:163:7-163:8
, "(" (TokenRsvp "(") @example/Example.hk:163:9-163:10
, "Box" (TokenConId "Box") @example/Example.hk:163:10-163:13
, "f" (TokenVarId "f") @example/Example.hk:163:14-163:15
, ")" (TokenRsvp ")") @example/Example.hk:163:15-163:16
, "m" (TokenVarId "m") @example/Example.hk:163:17-163:18
, "=" (TokenRsvp "=") @example/Example.hk:163:19-163:20
, "fmap" (TokenVarId "fmap") @example/Example.hk:163:21-163:25
, "f" (TokenVarId "f") @example/Example.hk:163:26-163:27
, "m" (TokenVarId "m") @example/Example.hk:163:28-163:29
, "" (TokenLn') @example/Example.hk:165:1
, "" (TokenBlk') @example/Example.hk:165:1
, "" (TokenLn') @example/Example.hk:165:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "(" (TokenRsvp "(") @example/Example.hk:167:3-167:4
, "<*>" (TokenOpId "<*>") @example/Example.hk:167:4-167:7
, ")" (TokenRsvp ")") @example/Example.hk:167:7-167:8
, "(" (TokenRsvp "(") @example/Example.hk:167:9-167:10
, "Linear" (TokenConId "Linear") @example/Example.hk:167:10-167:16
, "f" (TokenVarId "f") @example/Example.hk:167:17-167:18
, ")" (TokenRsvp ")") @example/Example.hk:167:18-167:19
, "m" (TokenVarId "m") @example/Example.hk:167:20-167:21
, "=" (TokenRsvp "=") @example/Example.hk:167:22-167:23
, "fmap" (TokenVarId "fmap") @example/Example.hk:167:24-167:28
, "f" (TokenVarId "f") @example/Example.hk:167:29-167:30
, "m" (TokenVarId "m") @example/Example.hk:167:31-167:32
, "" (TokenLn') @example/Example.hk:169:1
, "" (TokenBlk') @example/Example.hk:169:1
, "" (TokenLn') @example/Example.hk:169:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "(" (TokenRsvp "(") @example/Example.hk:172:3-172:4
, "<*>" (TokenOpId "<*>") @example/Example.hk:172:4-172:7
, ")" (TokenRsvp ")") @example/Example.hk:172:7-172:8
, "(" (TokenRsvp "(") @example/Example.hk:172:9-172:10
, "Just" (TokenConId "Just") @example/Example.hk:172:10-172:14
, "f" (TokenVarId "f") @example/Example.hk:172:15-172:16
, ")" (TokenRsvp ")") @example/Example.hk:172:16-172:17
, "m" (TokenVarId "m") @example/Example.hk:172:18-172:19
, "=" (TokenRsvp "=") @example/Example.hk:172:20-172:21
, "fmap" (TokenVarId "fmap") @example/Example.hk:172:22-172:26
, "f" (TokenVarId "f") @example/Example.hk:172:27-172:28
, "m" (TokenVarId "m") @example/Example.hk:172:29-172:30
, "" (TokenLn') @example/Example.hk:173:3
, "" (TokenLn) @example/Example.hk:173:3
, "(" (TokenRsvp "(") @example/Example.hk:173:3-173:4
, "<*>" (TokenOpId "<*>") @example/Example.hk:173:4-173:7
, ")" (TokenRsvp ")") @example/Example.hk:173:7-173:8
, "Nothing" (TokenConId "Nothing") @example/Example.hk:173:9-173:16
, "_" (TokenRsvp "_") @example/Example.hk:173:17-173:18
, "=" (TokenRsvp "=") @example/Example.hk:173:20-173:21
, "Nothing" (TokenConId "Nothing") @example/Example.hk:173:22-173:29
, "" (TokenLn') @example/Example.hk:175:1
, "" (TokenBlk') @example/Example.hk:175:1
, "" (TokenLn') @example/Example.hk:175:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "=" (TokenRsvp "=") @example/Example.hk:176:10-176:11
, "Right" (TokenConId "Right") @example/Example.hk:176:12-176:17
, "a" (TokenVarId "a") @example/Example.hk:176:18-176:19
, "(" (TokenRsvp "(") @example/Example.hk:178:3-178:4
, "<*>" (TokenOpId "<*>") @example/Example.hk:178:4-178:7
, ")" (TokenRsvp ")") @example/Example.hk:178:7-178:8
, "(" (TokenRsvp "(") @example/Example.hk:178:9-178:10
, "Right" (TokenConId "Right") @example/Example.hk:178:10-178:15
, "f" (TokenVarId "f") @example/Example.hk:178:16-178:17
, ")" (TokenRsvp ")") @example/Example.hk:178:17-178:18
, "m" (TokenVarId "m") @example/Example.hk:178:19-178:20
, "=" (TokenRsvp "=") @example/Example.hk:178:21-178:22
, "fmap" (TokenVarId "fmap") @example/Example.hk:178:23-178:27
, "f" (TokenVarId "f") @example/Example.hk:178:28-178:29
, "m" (TokenVarId "m") @example/Example.hk:178:30-178:31
, "(" (TokenRsvp "(") @example/Example.hk:179:3-179:4
, "<*>" (TokenOpId "<*>") @example/Example.hk:179:4-179:7
, ")" (TokenRsvp ")") @example/Example.hk:179:7-179:8
, "(" (TokenRsvp "(") @example/Example.hk:179:9-179:10
, "Left" (TokenConId "Left") @example/Example.hk:179:10-179:14
, "e" (TokenVarId "e") @example/Example.hk:179:15-179:16
, ")" (TokenRsvp ")") @example/Example.hk:179:16-179:17
, "_" (TokenRsvp "_") @example/Example.hk:179:19-179:20
, "=" (TokenRsvp "=") @example/Example.hk:179:21-179:22
, "Left" (TokenConId "Left") @example/Example.hk:179:23-179:27
, "e" (TokenVarId "e") @example/Example.hk:179:28-179:29
, "" (TokenLn') @example/Example.hk:183:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "m" (TokenVarId "m") @example/Example.hk:187:8-187:9
, "k" (TokenVarId "k") @example/Example.hk:187:10-187:11
, "=" (TokenRsvp "=") @example/Example.hk:187:12-187:13
, "m" (TokenVarId "m") @example/Example.hk:187:14-187:15
, ">>=" (TokenOpId ">>=") @example/Example.hk:187:16-187:19
, "\" (TokenRsvp "\\") @example/Example.hk:187:20-187:21
, "_" (TokenRsvp "_") @example/Example.hk:187:21-187:22
, "->" (TokenRsvp "->") @example/Example.hk:187:23-187:25
, "k" (TokenVarId "k") @example/Example.hk:187:26-187:27
, "" (TokenLn') @example/Example.hk:189:3
, "" (TokenLn) @example/Example.hk:189:3
, "return" (TokenVarId "return") @example/Example.hk:189:3-189:9
, ":" (TokenRsvp ":") @example/Example.hk:189:10-189:11
, "a" (TokenVarId "a") @example/Example.hk:189:12-189:13
, "->" (TokenRsvp "->") @example/Example.hk:189:14-189:16
, "m" (TokenVarId "m") @example/Example.hk:189:17-189:18
, "a" (TokenVarId "a") @example/Example.hk:189:19-189:20
, "" (TokenLn') @example/Example.hk:190:3
, "" (TokenLn) @example/Example.hk:190:3
, "return" (TokenVarId "return") @example/Example.hk:190:3-190:9
, "=" (TokenRsvp "=") @example/Example.hk:190:10-190:11
, "pure" (TokenVarId "pure") @example/Example.hk:190:12-190:16
, "" (TokenLn') @example/Example.hk:194:1
, "" (TokenBlk') @example/Example.hk:194:1
, "" (TokenLn') @example/Example.hk:194:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "(" (TokenRsvp "(") @example/Example.hk:195:3-195:4
, "Box" (TokenConId "Box") @example/Example.hk:195:4-195:7
, "x" (TokenVarId "x") @example/Example.hk:195:8-195:9
, ")" (TokenRsvp ")") @example/Example.hk:195:9-195:10
, ">>=" (TokenOpId ">>=") @example/Example.hk:195:11-195:14
, "k" (TokenVarId "k") @example/Example.hk:195:15-195:16
, "=" (TokenRsvp "=") @example/Example.hk:195:17-195:18
, "k" (TokenVarId "k") @example/Example.hk:195:19-195:20
, "x" (TokenVarId "x") @example/Example.hk:195:21-195:22
, "" (TokenLn') @example/Example.hk:197:1
, "" (TokenBlk') @example/Example.hk:197:1
, "" (TokenLn') @example/Example.hk:197:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "(" (TokenRsvp "(") @example/Example.hk:198:3-198:4
, "Linear" (TokenConId "Linear") @example/Example.hk:198:4-198:10
, "x" (TokenVarId "x") @example/Example.hk:198:11-198:12
, ")" (TokenRsvp ")") @example/Example.hk:198:12-198:13
, ">>=" (TokenOpId ">>=") @example/Example.hk:198:14-198:17
, "k" (TokenVarId "k") @example/Example.hk:198:18-198:19
, "=" (TokenRsvp "=") @example/Example.hk:198:20-198:21
, "k" (TokenVarId "k") @example/Example.hk:198:22-198:23
, "x" (TokenVarId "x") @example/Example.hk:198:24-198:25
, "" (TokenLn') @example/Example.hk:200:1
, "" (TokenBlk') @example/Example.hk:200:1
, "" (TokenLn') @example/Example.hk:200:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "(" (TokenRsvp "(") @example/Example.hk:201:3-201:4
, "Just" (TokenConId "Just") @example/Example.hk:201:4-201:8
, "x" (TokenVarId "x") @example/Example.hk:201:9-201:10
, ")" (TokenRsvp ")") @example/Example.hk:201:10-201:11
, ">>=" (TokenOpId ">>=") @example/Example.hk:201:12-201:15
, "k" (TokenVarId "k") @example/Example.hk:201:16-201:17
, "=" (TokenRsvp "=") @example/Example.hk:201:18-201:19
, "k" (TokenVarId "k") @example/Example.hk:201:20-201:21
, "x" (TokenVarId "x") @example/Example.hk:201:22-201:23
, "" (TokenLn') @example/Example.hk:202:3
, "" (TokenLn) @example/Example.hk:202:3
, "Nothing" (TokenConId "Nothing") @example/Example.hk:202:3-202:10
, ">>=" (TokenOpId ">>=") @example/Example.hk:202:11-202:14
, "_" (TokenRsvp "_") @example/Example.hk:202:15-202:16
, "=" (TokenRsvp "=") @example/Example.hk:202:17-202:18
, "Nothing" (TokenConId "Nothing") @example/Example.hk:202:19-202:26
, "" (TokenLn') @example/Example.hk:204:1
, "" (TokenBlk') @example/Example.hk:204:1
, "" (TokenLn') @example/Example.hk:204:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "(" (TokenRsvp "(") @example/Example.hk:205:3-205:4
, "Left" (TokenConId "Left") @example/Example.hk:205:4-205:8
, "e" (TokenVarId "e") @example/Example.hk:205:9-205:10
, ")" (TokenRsvp ")") @example/Example.hk:205:10-205:11
, ">>=" (TokenOpId ">>=") @example/Example.hk:205:12-205:15
, "k" (TokenVarId "k") @example/Example.hk:205:16-205:17
, "=" (TokenRsvp "=") @example/Example.hk:205:18-205:19
, "Left" (TokenConId "Left") @example/Example.hk:205:20-205:24
, "e" (TokenVarId "e") @example/Example.hk:205:25-205:26
, "" (TokenLn') @example/Example.hk:206:3
, "" (TokenLn) @example/Example.hk:206:3
, "(" (TokenRsvp "(") @example/Example.hk:206:3-206:4
, "Right" (TokenConId "Right") @example/Example.hk:206:4-206:9
, "x" (TokenVarId "x") @example/Example.hk:206:10-206:11
, ")" (TokenRsvp ")") @example/Example.hk:206:11-206:12
, ">>=" (TokenOpId ">>=") @example/Example.hk:206:13-206:16
, "k" (TokenVarId "k") @example/Example.hk:206:17-206:18
, "=" (TokenRsvp "=") @example/Example.hk:206:19-206:20
, "k" (TokenVarId "k") @example/Example.hk:206:21-206:22
, "x" (TokenVarId "x") @example/Example.hk:206:23-206:24
, "" (TokenLn') @example/Example.hk:211:1
, "" (TokenBlk') @example/Example.hk:211:1
, "" (TokenLn') @example/Example.hk:211:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "|" (TokenRsvp "|") @example/Example.hk:213:3-213:4
, "EdgeList" (TokenConId "EdgeList") @example/Example.hk:213:5-213:13
, "|" (TokenRsvp "|") @example/Example.hk:214:3-214:4
, "Matrix" (TokenConId "Matrix") @example/Example.hk:214:5-214:11
, "" (TokenLn') @example/Example.hk:216:1 ]"
Expected tokens: "[]"
Unexpected tokens: "[ "{" (TokenRsvp "{") @example/Example.hk:216:21-216:22
, "edges" (TokenVarId "edges") @example/Example.hk:216:23-216:28
, ":" (TokenRsvp ":") @example/Example.hk:216:29-216:30
, "[" (TokenRsvp "[") @example/Example.hk:216:31-216:32
, "[" (TokenRsvp "[") @example/Example.hk:216:32-216:33
, "Int" (TokenConId "Int") @example/Example.hk:216:33-216:36
, "]" (TokenRsvp "]") @example/Example.hk:216:36-216:37
, "]" (TokenRsvp "]") @example/Example.hk:216:37-216:38
, "}" (TokenRsvp "}") @example/Example.hk:216:39-216:40
, "" (TokenLn') @example/Example.hk:218:1 ]"
Expected tokens: "[]"
Severe Parser Error: Ambiguous grammar encountered. Please report.
class Graph g where  size : g -> Int
                     bfs : g -> Int -> ([Int], [Int], [Int])
class Graph g where  size : g -> Int
                     bfs : g -> Int -> ([Int], [Int], [Int])
Unexpected tokens: "[ "." (TokenRsvp ".") @example/Example.hk:224:17-224:18
, "edges" (TokenVarId "edges") @example/Example.hk:224:19-224:24
, "$" (TokenOpId "$") @example/Example.hk:224:25-224:26
, "g" (TokenVarId "g") @example/Example.hk:224:27-224:28
, "" (TokenLn') @example/Example.hk:225:3
, "" (TokenLn) @example/Example.hk:225:3
, "bfs" (TokenVarId "bfs") @example/Example.hk:225:3-225:6
, "g" (TokenVarId "g") @example/Example.hk:225:7-225:8
, "s" (TokenVarId "s") @example/Example.hk:225:9-225:10
, "=" (TokenRsvp "=") @example/Example.hk:225:11-225:12
, "do" (TokenRsvp "do") @example/Example.hk:225:13-225:15
, "" (TokenBlk) @example/Example.hk:226:5
, "" (TokenLn) @example/Example.hk:226:5
, "par" (TokenVarId "par") @example/Example.hk:226:5-226:8
, "<-" (TokenRsvp "<-") @example/Example.hk:226:9-226:11
, "Array" (TokenConId "Array") @example/Example.hk:226:12-226:17
, "(" (TokenRsvp "(") @example/Example.hk:226:18-226:19
, "size" (TokenVarId "size") @example/Example.hk:226:19-226:23
, "g" (TokenVarId "g") @example/Example.hk:226:24-226:25
, ")" (TokenRsvp ")") @example/Example.hk:226:25-226:26
, ":" (TokenRsvp ":") @example/Example.hk:226:27-226:28
, "[" (TokenRsvp "[") @example/Example.hk:226:29-226:30
, "Int" (TokenConId "Int") @example/Example.hk:226:30-226:33
, "]" (TokenRsvp "]") @example/Example.hk:226:33-226:34
, "" (TokenLn') @example/Example.hk:227:5
, "" (TokenLn) @example/Example.hk:227:5
, "dist" (TokenVarId "dist") @example/Example.hk:227:5-227:9
, "<-" (TokenRsvp "<-") @example/Example.hk:227:10-227:12
, "Array" (TokenConId "Array") @example/Example.hk:227:13-227:18
, "(" (TokenRsvp "(") @example/Example.hk:227:19-227:20
, "size" (TokenVarId "size") @example/Example.hk:227:20-227:24
, "g" (TokenVarId "g") @example/Example.hk:227:25-227:26
, ")" (TokenRsvp ")") @example/Example.hk:227:26-227:27
, ":" (TokenRsvp ":") @example/Example.hk:227:28-227:29
, "[" (TokenRsvp "[") @example/Example.hk:227:30-227:31
, "Int" (TokenConId "Int") @example/Example.hk:227:31-227:34
, "]" (TokenRsvp "]") @example/Example.hk:227:34-227:35
, "" (TokenLn') @example/Example.hk:228:5
, "" (TokenLn) @example/Example.hk:228:5
, "q" (TokenVarId "q") @example/Example.hk:228:5-228:6
, "<-" (TokenRsvp "<-") @example/Example.hk:228:7-228:9
, "Array" (TokenConId "Array") @example/Example.hk:228:10-228:15
, "(" (TokenRsvp "(") @example/Example.hk:228:16-228:17
, "size" (TokenVarId "size") @example/Example.hk:228:17-228:21
, "g" (TokenVarId "g") @example/Example.hk:228:22-228:23
, ")" (TokenRsvp ")") @example/Example.hk:228:23-228:24
, ":" (TokenRsvp ":") @example/Example.hk:228:25-228:26
, "[" (TokenRsvp "[") @example/Example.hk:228:27-228:28
, "Int" (TokenConId "Int") @example/Example.hk:228:28-228:31
, "]" (TokenRsvp "]") @example/Example.hk:228:31-228:32
, "" (TokenLn') @example/Example.hk:234:5
, "" (TokenLn) @example/Example.hk:234:5
, "return" (TokenVarId "return") @example/Example.hk:234:5-234:11
, "(" (TokenRsvp "(") @example/Example.hk:234:12-234:13
, "[" (TokenRsvp "[") @example/Example.hk:234:13-234:14
, "]" (TokenRsvp "]") @example/Example.hk:234:14-234:15
, "," (TokenRsvp ",") @example/Example.hk:234:15-234:16
, "[" (TokenRsvp "[") @example/Example.hk:234:17-234:18
, "]" (TokenRsvp "]") @example/Example.hk:234:18-234:19
, "," (TokenRsvp ",") @example/Example.hk:234:19-234:20
, "[" (TokenRsvp "[") @example/Example.hk:234:21-234:22
, "]" (TokenRsvp "]") @example/Example.hk:234:22-234:23
, ")" (TokenRsvp ")") @example/Example.hk:234:23-234:24
, "" (TokenLn') @example/Example.hk:241:1
, "" (TokenBlk') @example/Example.hk:241:1
, "" (TokenLn') @example/Example.hk:241:1
, "" (TokenBlk') @example/Example.hk:241:1
, "" (TokenLn') @example/Example.hk:241:1 ]"
Expected tokens: "[ wildcard expression
, parenthetical expression
, operator
, operator
, value
, operator
, constructor
, variable ]"
Unexpected tokens: "["" (TokenLn') @example/Example.hk:248:20]"
Expected tokens: "[]"
Example.hk: 
Parser encountered fatal error.
CallStack (from HasCallStack):
  error, called at test/Main.hs:56:13 in main:Main
Test suite Example.hk: FAIL
Test suite logged to:
/home/gabe/projects/hawk/dist-newstyle/build/x86_64-linux/ghc-8.4.1/language-hawk-syntax-0.0.0/c/Example.hk/test/language-hawk-syntax-0.0.0-Example.hk.log
0 of 1 test suites (0 of 1 test cases) passed.

mod Test.Main

use Data.List
use! Math.Trig.(sin as S, cos as C, tan, Arc.(asin as S, acos, atan) as A) as M
use System.IO
use Network.Socket

enum Maybe a b c 
  <= Foo a b
  = Nothing | Just a

data Vector a 
  <: MetaInfo a, MoreInfo 
  <= Foo a
  = var x :: Foo a
  , var y :: a

type IntVector = Vector I32

val blueberry :: i32 = { 21312 }
var raspberry :: i32 = { -123 }
var blackberry :: f64 = { 312.3 }

class Berry a : {
  fn squish :: a -> ()
  fn mix :: a -> a -> a
}

fn fancy :: Foo a b c, Bar c b => a -> b -> c -> ()
| a b c = { () }

fn foo :: i32 -> ()
| x 
  * () = { () }
  * () = { () }
  * _ = { () }
| _ : {
        { 
          if () :{
            {()}
          }
        }
        {
          else :{ 
            {()}
          }
        }
      }
/* Sample of a basic Hawk program.
   Hawk is similar in syntax to Haskell,
   but technically closer to C.
*/

<- IO, car, drive, doubleSum
-> IO

// Record
Car :-
  gas       :: I32
  max_speed :: I32


// Variables
var_a :: I32 ^= 1


// Functions
drive car :: Car -> IO () :=
  out ^= toString max_speed
  print out

(6r) doubleSum x y
 :: I32 -> I32 -> I32
 := 
  sum :: I32 ^= add_i32 x y
  sum = mul_i32 sum 2
  return sum


// Main function and default entry point of all programs.
// An executable cannot compile without a main function.
main foo :: IO () :=
  // Create some cars
  car_a :: Car ^= Car 12 124
  car_b :: Car ^= Car 19 103
  
  // Drive some cars
  drive car_a
  drive car_b // If drive mutated car_b, and error should be thrown.
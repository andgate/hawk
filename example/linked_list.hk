module LinkedList:
  
  Node a :-
    value :: a,
    next  :: Node
  
  
  push_front :: *Node a -> a -> ()
  | head val :=  
    val new_node :: *Node a = new Node value nil
    new_node^value = value
    
    if !(*head) == null :
      head = new_node
    else:
      new_node->next = head 
      head = new_node
      // Handle an existing head
  
  
  // An example using guards with the new parameter notation
  bmiTell :: (RealFloat a) => a -> String  
  | bmi 
    * bmi <= 18.5 = "You're underweight, you emo, you!"  
    * bmi <= 25.0 = "You're supposedly normal. Pffft, I bet you're ugly!"  
    * bmi <= 30.0 = "You're fat! Lose some weight, fatty!"  
    * otherwise   = "You're a whale, congratulations!"  
}
/* DO NOT EDIT: This file is automatically generated by Cabal */

/* package hawk-0.0.0 */
#ifndef VERSION_hawk
#define VERSION_hawk "0.0.0"
#endif /* VERSION_hawk */
#ifndef MIN_VERSION_hawk
#define MIN_VERSION_hawk(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  0 || \
  (major1) == 0 && (major2) == 0 && (minor) <= 0)
#endif /* MIN_VERSION_hawk */

/* package Earley-0.12.1.0 */
#ifndef VERSION_Earley
#define VERSION_Earley "0.12.1.0"
#endif /* VERSION_Earley */
#ifndef MIN_VERSION_Earley
#define MIN_VERSION_Earley(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  12 || \
  (major1) == 0 && (major2) == 12 && (minor) <= 1)
#endif /* MIN_VERSION_Earley */

/* package aeson-1.3.0.0 */
#ifndef VERSION_aeson
#define VERSION_aeson "1.3.0.0"
#endif /* VERSION_aeson */
#ifndef MIN_VERSION_aeson
#define MIN_VERSION_aeson(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 0)
#endif /* MIN_VERSION_aeson */

/* package array-0.5.2.0 */
#ifndef VERSION_array
#define VERSION_array "0.5.2.0"
#endif /* VERSION_array */
#ifndef MIN_VERSION_array
#define MIN_VERSION_array(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 2)
#endif /* MIN_VERSION_array */

/* package base-4.11.0.0 */
#ifndef VERSION_base
#define VERSION_base "4.11.0.0"
#endif /* VERSION_base */
#ifndef MIN_VERSION_base
#define MIN_VERSION_base(major1,major2,minor) (\
  (major1) <  4 || \
  (major1) == 4 && (major2) <  11 || \
  (major1) == 4 && (major2) == 11 && (minor) <= 0)
#endif /* MIN_VERSION_base */

/* package binary-0.8.5.1 */
#ifndef VERSION_binary
#define VERSION_binary "0.8.5.1"
#endif /* VERSION_binary */
#ifndef MIN_VERSION_binary
#define MIN_VERSION_binary(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  8 || \
  (major1) == 0 && (major2) == 8 && (minor) <= 5)
#endif /* MIN_VERSION_binary */

/* package bound-2.0.1 */
#ifndef VERSION_bound
#define VERSION_bound "2.0.1"
#endif /* VERSION_bound */
#ifndef MIN_VERSION_bound
#define MIN_VERSION_bound(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  0 || \
  (major1) == 2 && (major2) == 0 && (minor) <= 1)
#endif /* MIN_VERSION_bound */

/* package bytes-0.15.3 */
#ifndef VERSION_bytes
#define VERSION_bytes "0.15.3"
#endif /* VERSION_bytes */
#ifndef MIN_VERSION_bytes
#define MIN_VERSION_bytes(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  15 || \
  (major1) == 0 && (major2) == 15 && (minor) <= 3)
#endif /* MIN_VERSION_bytes */

/* package bytestring-0.10.8.2 */
#ifndef VERSION_bytestring
#define VERSION_bytestring "0.10.8.2"
#endif /* VERSION_bytestring */
#ifndef MIN_VERSION_bytestring
#define MIN_VERSION_bytestring(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  10 || \
  (major1) == 0 && (major2) == 10 && (minor) <= 8)
#endif /* MIN_VERSION_bytestring */

/* package containers-0.5.11.0 */
#ifndef VERSION_containers
#define VERSION_containers "0.5.11.0"
#endif /* VERSION_containers */
#ifndef MIN_VERSION_containers
#define MIN_VERSION_containers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 11)
#endif /* MIN_VERSION_containers */

/* package data-default-class-0.1.2.0 */
#ifndef VERSION_data_default_class
#define VERSION_data_default_class "0.1.2.0"
#endif /* VERSION_data_default_class */
#ifndef MIN_VERSION_data_default_class
#define MIN_VERSION_data_default_class(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 2)
#endif /* MIN_VERSION_data_default_class */

/* package data-default-instances-text-0.0.1 */
#ifndef VERSION_data_default_instances_text
#define VERSION_data_default_instances_text "0.0.1"
#endif /* VERSION_data_default_instances_text */
#ifndef MIN_VERSION_data_default_instances_text
#define MIN_VERSION_data_default_instances_text(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  0 || \
  (major1) == 0 && (major2) == 0 && (minor) <= 1)
#endif /* MIN_VERSION_data_default_instances_text */

/* package deriving-compat-0.4.1 */
#ifndef VERSION_deriving_compat
#define VERSION_deriving_compat "0.4.1"
#endif /* VERSION_deriving_compat */
#ifndef MIN_VERSION_deriving_compat
#define MIN_VERSION_deriving_compat(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  4 || \
  (major1) == 0 && (major2) == 4 && (minor) <= 1)
#endif /* MIN_VERSION_deriving_compat */

/* package directory-1.3.1.5 */
#ifndef VERSION_directory
#define VERSION_directory "1.3.1.5"
#endif /* VERSION_directory */
#ifndef MIN_VERSION_directory
#define MIN_VERSION_directory(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 1)
#endif /* MIN_VERSION_directory */

/* package edit-distance-0.2.2.1 */
#ifndef VERSION_edit_distance
#define VERSION_edit_distance "0.2.2.1"
#endif /* VERSION_edit_distance */
#ifndef MIN_VERSION_edit_distance
#define MIN_VERSION_edit_distance(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 2)
#endif /* MIN_VERSION_edit_distance */

/* package either-5 */
#ifndef VERSION_either
#define VERSION_either "5"
#endif /* VERSION_either */
#ifndef MIN_VERSION_either
#define MIN_VERSION_either(major1,major2,minor) (\
  (major1) <  5 || \
  (major1) == 5 && (major2) <  0 || \
  (major1) == 5 && (major2) == 0 && (minor) <= 0)
#endif /* MIN_VERSION_either */

/* package exceptions-0.8.3 */
#ifndef VERSION_exceptions
#define VERSION_exceptions "0.8.3"
#endif /* VERSION_exceptions */
#ifndef MIN_VERSION_exceptions
#define MIN_VERSION_exceptions(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  8 || \
  (major1) == 0 && (major2) == 8 && (minor) <= 3)
#endif /* MIN_VERSION_exceptions */

/* package extra-1.6.5 */
#ifndef VERSION_extra
#define VERSION_extra "1.6.5"
#endif /* VERSION_extra */
#ifndef MIN_VERSION_extra
#define MIN_VERSION_extra(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  6 || \
  (major1) == 1 && (major2) == 6 && (minor) <= 5)
#endif /* MIN_VERSION_extra */

/* package filepath-1.4.2 */
#ifndef VERSION_filepath
#define VERSION_filepath "1.4.2"
#endif /* VERSION_filepath */
#ifndef MIN_VERSION_filepath
#define MIN_VERSION_filepath(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  4 || \
  (major1) == 1 && (major2) == 4 && (minor) <= 2)
#endif /* MIN_VERSION_filepath */

/* package ghc-prim-0.5.2.0 */
#ifndef VERSION_ghc_prim
#define VERSION_ghc_prim "0.5.2.0"
#endif /* VERSION_ghc_prim */
#ifndef MIN_VERSION_ghc_prim
#define MIN_VERSION_ghc_prim(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 2)
#endif /* MIN_VERSION_ghc_prim */

/* package hashable-1.2.7.0 */
#ifndef VERSION_hashable
#define VERSION_hashable "1.2.7.0"
#endif /* VERSION_hashable */
#ifndef MIN_VERSION_hashable
#define MIN_VERSION_hashable(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 7)
#endif /* MIN_VERSION_hashable */

/* package lens-4.16.1 */
#ifndef VERSION_lens
#define VERSION_lens "4.16.1"
#endif /* VERSION_lens */
#ifndef MIN_VERSION_lens
#define MIN_VERSION_lens(major1,major2,minor) (\
  (major1) <  4 || \
  (major1) == 4 && (major2) <  16 || \
  (major1) == 4 && (major2) == 16 && (minor) <= 1)
#endif /* MIN_VERSION_lens */

/* package lifted-async-0.10.0.1 */
#ifndef VERSION_lifted_async
#define VERSION_lifted_async "0.10.0.1"
#endif /* VERSION_lifted_async */
#ifndef MIN_VERSION_lifted_async
#define MIN_VERSION_lifted_async(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  10 || \
  (major1) == 0 && (major2) == 10 && (minor) <= 0)
#endif /* MIN_VERSION_lifted_async */

/* package lifted-base-0.2.3.12 */
#ifndef VERSION_lifted_base
#define VERSION_lifted_base "0.2.3.12"
#endif /* VERSION_lifted_base */
#ifndef MIN_VERSION_lifted_base
#define MIN_VERSION_lifted_base(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 3)
#endif /* MIN_VERSION_lifted_base */

/* package llvm-hs-6.0.0 */
#ifndef VERSION_llvm_hs
#define VERSION_llvm_hs "6.0.0"
#endif /* VERSION_llvm_hs */
#ifndef MIN_VERSION_llvm_hs
#define MIN_VERSION_llvm_hs(major1,major2,minor) (\
  (major1) <  6 || \
  (major1) == 6 && (major2) <  0 || \
  (major1) == 6 && (major2) == 0 && (minor) <= 0)
#endif /* MIN_VERSION_llvm_hs */

/* package llvm-hs-pure-6.0.0 */
#ifndef VERSION_llvm_hs_pure
#define VERSION_llvm_hs_pure "6.0.0"
#endif /* VERSION_llvm_hs_pure */
#ifndef MIN_VERSION_llvm_hs_pure
#define MIN_VERSION_llvm_hs_pure(major1,major2,minor) (\
  (major1) <  6 || \
  (major1) == 6 && (major2) <  0 || \
  (major1) == 6 && (major2) == 0 && (minor) <= 0)
#endif /* MIN_VERSION_llvm_hs_pure */

/* package mmorph-1.1.2 */
#ifndef VERSION_mmorph
#define VERSION_mmorph "1.1.2"
#endif /* VERSION_mmorph */
#ifndef MIN_VERSION_mmorph
#define MIN_VERSION_mmorph(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 2)
#endif /* MIN_VERSION_mmorph */

/* package monad-control-1.0.2.3 */
#ifndef VERSION_monad_control
#define VERSION_monad_control "1.0.2.3"
#endif /* VERSION_monad_control */
#ifndef MIN_VERSION_monad_control
#define MIN_VERSION_monad_control(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 2)
#endif /* MIN_VERSION_monad_control */

/* package monad-gen-0.3.0.1 */
#ifndef VERSION_monad_gen
#define VERSION_monad_gen "0.3.0.1"
#endif /* VERSION_monad_gen */
#ifndef MIN_VERSION_monad_gen
#define MIN_VERSION_monad_gen(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  3 || \
  (major1) == 0 && (major2) == 3 && (minor) <= 0)
#endif /* MIN_VERSION_monad_gen */

/* package monad-logger-0.3.28.2 */
#ifndef VERSION_monad_logger
#define VERSION_monad_logger "0.3.28.2"
#endif /* VERSION_monad_logger */
#ifndef MIN_VERSION_monad_logger
#define MIN_VERSION_monad_logger(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  3 || \
  (major1) == 0 && (major2) == 3 && (minor) <= 28)
#endif /* MIN_VERSION_monad_logger */

/* package mono-traversable-1.0.8.1 */
#ifndef VERSION_mono_traversable
#define VERSION_mono_traversable "1.0.8.1"
#endif /* VERSION_mono_traversable */
#ifndef MIN_VERSION_mono_traversable
#define MIN_VERSION_mono_traversable(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 8)
#endif /* MIN_VERSION_mono_traversable */

/* package mtl-2.2.2 */
#ifndef VERSION_mtl
#define VERSION_mtl "2.2.2"
#endif /* VERSION_mtl */
#ifndef MIN_VERSION_mtl
#define MIN_VERSION_mtl(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  2 || \
  (major1) == 2 && (major2) == 2 && (minor) <= 2)
#endif /* MIN_VERSION_mtl */

/* package multimap-1.2.1 */
#ifndef VERSION_multimap
#define VERSION_multimap "1.2.1"
#endif /* VERSION_multimap */
#ifndef MIN_VERSION_multimap
#define MIN_VERSION_multimap(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 1)
#endif /* MIN_VERSION_multimap */

/* package primitive-0.6.3.0 */
#ifndef VERSION_primitive
#define VERSION_primitive "0.6.3.0"
#endif /* VERSION_primitive */
#ifndef MIN_VERSION_primitive
#define MIN_VERSION_primitive(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  6 || \
  (major1) == 0 && (major2) == 6 && (minor) <= 3)
#endif /* MIN_VERSION_primitive */

/* package prettyprinter-1.2.0.1 */
#ifndef VERSION_prettyprinter
#define VERSION_prettyprinter "1.2.0.1"
#endif /* VERSION_prettyprinter */
#ifndef MIN_VERSION_prettyprinter
#define MIN_VERSION_prettyprinter(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 0)
#endif /* MIN_VERSION_prettyprinter */

/* package reducers-3.12.2 */
#ifndef VERSION_reducers
#define VERSION_reducers "3.12.2"
#endif /* VERSION_reducers */
#ifndef MIN_VERSION_reducers
#define MIN_VERSION_reducers(major1,major2,minor) (\
  (major1) <  3 || \
  (major1) == 3 && (major2) <  12 || \
  (major1) == 3 && (major2) == 12 && (minor) <= 2)
#endif /* MIN_VERSION_reducers */

/* package resourcet-1.2.0 */
#ifndef VERSION_resourcet
#define VERSION_resourcet "1.2.0"
#endif /* VERSION_resourcet */
#ifndef MIN_VERSION_resourcet
#define MIN_VERSION_resourcet(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 0)
#endif /* MIN_VERSION_resourcet */

/* package safe-0.3.17 */
#ifndef VERSION_safe
#define VERSION_safe "0.3.17"
#endif /* VERSION_safe */
#ifndef MIN_VERSION_safe
#define MIN_VERSION_safe(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  3 || \
  (major1) == 0 && (major2) == 3 && (minor) <= 17)
#endif /* MIN_VERSION_safe */

/* package streaming-commons-0.2.0.0 */
#ifndef VERSION_streaming_commons
#define VERSION_streaming_commons "0.2.0.0"
#endif /* VERSION_streaming_commons */
#ifndef MIN_VERSION_streaming_commons
#define MIN_VERSION_streaming_commons(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 0)
#endif /* MIN_VERSION_streaming_commons */

/* package text-1.2.3.0 */
#ifndef VERSION_text
#define VERSION_text "1.2.3.0"
#endif /* VERSION_text */
#ifndef MIN_VERSION_text
#define MIN_VERSION_text(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 3)
#endif /* MIN_VERSION_text */

/* package these-0.7.4 */
#ifndef VERSION_these
#define VERSION_these "0.7.4"
#endif /* VERSION_these */
#ifndef MIN_VERSION_these
#define MIN_VERSION_these(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  7 || \
  (major1) == 0 && (major2) == 7 && (minor) <= 4)
#endif /* MIN_VERSION_these */

/* package time-1.8.0.2 */
#ifndef VERSION_time
#define VERSION_time "1.8.0.2"
#endif /* VERSION_time */
#ifndef MIN_VERSION_time
#define MIN_VERSION_time(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  8 || \
  (major1) == 1 && (major2) == 8 && (minor) <= 0)
#endif /* MIN_VERSION_time */

/* package transformers-0.5.5.0 */
#ifndef VERSION_transformers
#define VERSION_transformers "0.5.5.0"
#endif /* VERSION_transformers */
#ifndef MIN_VERSION_transformers
#define MIN_VERSION_transformers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  5 || \
  (major1) == 0 && (major2) == 5 && (minor) <= 5)
#endif /* MIN_VERSION_transformers */

/* package transformers-base-0.4.4 */
#ifndef VERSION_transformers_base
#define VERSION_transformers_base "0.4.4"
#endif /* VERSION_transformers_base */
#ifndef MIN_VERSION_transformers_base
#define MIN_VERSION_transformers_base(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  4 || \
  (major1) == 0 && (major2) == 4 && (minor) <= 4)
#endif /* MIN_VERSION_transformers_base */

/* package unbound-generics-0.3.2 */
#ifndef VERSION_unbound_generics
#define VERSION_unbound_generics "0.3.2"
#endif /* VERSION_unbound_generics */
#ifndef MIN_VERSION_unbound_generics
#define MIN_VERSION_unbound_generics(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  3 || \
  (major1) == 0 && (major2) == 3 && (minor) <= 2)
#endif /* MIN_VERSION_unbound_generics */

/* package unordered-containers-0.2.9.0 */
#ifndef VERSION_unordered_containers
#define VERSION_unordered_containers "0.2.9.0"
#endif /* VERSION_unordered_containers */
#ifndef MIN_VERSION_unordered_containers
#define MIN_VERSION_unordered_containers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 9)
#endif /* MIN_VERSION_unordered_containers */

/* package utf8-string-1.0.1.1 */
#ifndef VERSION_utf8_string
#define VERSION_utf8_string "1.0.1.1"
#endif /* VERSION_utf8_string */
#ifndef MIN_VERSION_utf8_string
#define MIN_VERSION_utf8_string(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 1)
#endif /* MIN_VERSION_utf8_string */

/* package vector-0.12.0.1 */
#ifndef VERSION_vector
#define VERSION_vector "0.12.0.1"
#endif /* VERSION_vector */
#ifndef MIN_VERSION_vector
#define MIN_VERSION_vector(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  12 || \
  (major1) == 0 && (major2) == 12 && (minor) <= 0)
#endif /* MIN_VERSION_vector */

/* package yaml-0.8.28 */
#ifndef VERSION_yaml
#define VERSION_yaml "0.8.28"
#endif /* VERSION_yaml */
#ifndef MIN_VERSION_yaml
#define MIN_VERSION_yaml(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  8 || \
  (major1) == 0 && (major2) == 8 && (minor) <= 28)
#endif /* MIN_VERSION_yaml */

/* tool alex-3.2.1 */
#ifndef TOOL_VERSION_alex
#define TOOL_VERSION_alex "3.2.1"
#endif /* TOOL_VERSION_alex */
#ifndef MIN_TOOL_VERSION_alex
#define MIN_TOOL_VERSION_alex(major1,major2,minor) (\
  (major1) <  3 || \
  (major1) == 3 && (major2) <  2 || \
  (major1) == 3 && (major2) == 2 && (minor) <= 1)
#endif /* MIN_TOOL_VERSION_alex */

/* tool gcc-7 */
#ifndef TOOL_VERSION_gcc
#define TOOL_VERSION_gcc "7"
#endif /* TOOL_VERSION_gcc */
#ifndef MIN_TOOL_VERSION_gcc
#define MIN_TOOL_VERSION_gcc(major1,major2,minor) (\
  (major1) <  7 || \
  (major1) == 7 && (major2) <  0 || \
  (major1) == 7 && (major2) == 0 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_gcc */

/* tool ghc-8.4.1 */
#ifndef TOOL_VERSION_ghc
#define TOOL_VERSION_ghc "8.4.1"
#endif /* TOOL_VERSION_ghc */
#ifndef MIN_TOOL_VERSION_ghc
#define MIN_TOOL_VERSION_ghc(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  4 || \
  (major1) == 8 && (major2) == 4 && (minor) <= 1)
#endif /* MIN_TOOL_VERSION_ghc */

/* tool ghc-pkg-8.4.1 */
#ifndef TOOL_VERSION_ghc_pkg
#define TOOL_VERSION_ghc_pkg "8.4.1"
#endif /* TOOL_VERSION_ghc_pkg */
#ifndef MIN_TOOL_VERSION_ghc_pkg
#define MIN_TOOL_VERSION_ghc_pkg(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  4 || \
  (major1) == 8 && (major2) == 4 && (minor) <= 1)
#endif /* MIN_TOOL_VERSION_ghc_pkg */

/* tool haddock-2.19.0 */
#ifndef TOOL_VERSION_haddock
#define TOOL_VERSION_haddock "2.19.0"
#endif /* TOOL_VERSION_haddock */
#ifndef MIN_TOOL_VERSION_haddock
#define MIN_TOOL_VERSION_haddock(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  19 || \
  (major1) == 2 && (major2) == 19 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_haddock */

/* tool hpc-0.67 */
#ifndef TOOL_VERSION_hpc
#define TOOL_VERSION_hpc "0.67"
#endif /* TOOL_VERSION_hpc */
#ifndef MIN_TOOL_VERSION_hpc
#define MIN_TOOL_VERSION_hpc(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  67 || \
  (major1) == 0 && (major2) == 67 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_hpc */

/* tool hsc2hs-0.68.3 */
#ifndef TOOL_VERSION_hsc2hs
#define TOOL_VERSION_hsc2hs "0.68.3"
#endif /* TOOL_VERSION_hsc2hs */
#ifndef MIN_TOOL_VERSION_hsc2hs
#define MIN_TOOL_VERSION_hsc2hs(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  68 || \
  (major1) == 0 && (major2) == 68 && (minor) <= 3)
#endif /* MIN_TOOL_VERSION_hsc2hs */

/* tool runghc-8.4.1 */
#ifndef TOOL_VERSION_runghc
#define TOOL_VERSION_runghc "8.4.1"
#endif /* TOOL_VERSION_runghc */
#ifndef MIN_TOOL_VERSION_runghc
#define MIN_TOOL_VERSION_runghc(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  4 || \
  (major1) == 8 && (major2) == 4 && (minor) <= 1)
#endif /* MIN_TOOL_VERSION_runghc */

/* tool strip-2.29 */
#ifndef TOOL_VERSION_strip
#define TOOL_VERSION_strip "2.29"
#endif /* TOOL_VERSION_strip */
#ifndef MIN_TOOL_VERSION_strip
#define MIN_TOOL_VERSION_strip(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  29 || \
  (major1) == 2 && (major2) == 29 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_strip */

#ifndef CURRENT_PACKAGE_KEY
#define CURRENT_PACKAGE_KEY "hawk-0.0.0-inplace"
#endif /* CURRENT_PACKAGE_KEY */
#ifndef CURRENT_COMPONENT_ID
#define CURRENT_COMPONENT_ID "hawk-0.0.0-inplace"
#endif /* CURRENT_COMPONENT_ID */
#ifndef CURRENT_PACKAGE_VERSION
#define CURRENT_PACKAGE_VERSION "0.0.0"
#endif /* CURRENT_PACKAGE_VERSION */

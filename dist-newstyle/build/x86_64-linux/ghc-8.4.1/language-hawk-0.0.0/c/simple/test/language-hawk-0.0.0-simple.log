Test suite simple: RUNNING...


Beginning Lexxing:
[ [ "" (TokenLn) @example/Example.hk:42:1-42:5
, "five" (TokenVarId "five") @example/Example.hk:42:1-42:5
, "=" (TokenRsvp "=") @example/Example.hk:42:6-42:7
, "let" (TokenRsvp "let") @example/Example.hk:43:3-43:6
, "" (TokenBlk) @example/Example.hk:43:7-43:8
, "" (TokenLn) @example/Example.hk:43:7-43:8
, "z" (TokenVarId "z") @example/Example.hk:43:7-43:8
, "=" (TokenRsvp "=") @example/Example.hk:43:9-43:10
, "#add" (TokenPrim "#add") @example/Example.hk:43:11-43:15
, "2" (TokenInteger 2) @example/Example.hk:43:16-43:17
, "2" (TokenInteger 2) @example/Example.hk:43:18-43:19
, "" (TokenLn') @example/Example.hk:44:3-44:5
, "" (TokenBlk') @example/Example.hk:44:3-44:5
, "in" (TokenRsvp "in") @example/Example.hk:44:3-44:5
, "#add" (TokenPrim "#add") @example/Example.hk:44:6-44:10
, "1" (TokenInteger 1) @example/Example.hk:44:11-44:12
, "z" (TokenVarId "z") @example/Example.hk:44:13-44:14
, "" (TokenLn') @example/Example.hk:85:1-129:4 ]
, [ "" (TokenLn) @example/Example.hk:29:1-29:4
, "foo" (TokenVarId "foo") @example/Example.hk:29:1-29:4
, "x" (TokenVarId "x") @example/Example.hk:29:5-29:6
, "y" (TokenVarId "y") @example/Example.hk:29:7-29:8
, "=" (TokenRsvp "=") @example/Example.hk:29:9-29:10
, "#div" (TokenPrim "#div") @example/Example.hk:30:3-30:7
, "(" (TokenRsvp "(") @example/Example.hk:30:8-30:9
, "#mul" (TokenPrim "#mul") @example/Example.hk:30:9-30:13
, "(" (TokenRsvp "(") @example/Example.hk:30:14-30:15
, "#add" (TokenPrim "#add") @example/Example.hk:30:15-30:19
, "x" (TokenVarId "x") @example/Example.hk:30:20-30:21
, "2" (TokenInteger 2) @example/Example.hk:30:22-30:23
, ")" (TokenRsvp ")") @example/Example.hk:30:23-30:24
, "y" (TokenVarId "y") @example/Example.hk:30:25-30:26
, ")" (TokenRsvp ")") @example/Example.hk:30:26-30:27
, "3" (TokenInteger 3) @example/Example.hk:30:28-30:29
, "" (TokenLn') @example/Example.hk:42:1-42:5 ]
, [ "" (TokenLn) @example/Example.hk:23:1-23:4
, "bar" (TokenVarId "bar") @example/Example.hk:23:1-23:4
, ":" (TokenRsvp ":") @example/Example.hk:23:5-23:6
, "Int" (TokenConId "Int") @example/Example.hk:23:7-23:10
, "-o" (TokenRsvp "-o") @example/Example.hk:23:11-23:13
, "Int" (TokenConId "Int") @example/Example.hk:23:14-23:17
, "-o" (TokenRsvp "-o") @example/Example.hk:23:18-23:20
, "Int" (TokenConId "Int") @example/Example.hk:23:21-23:24
, "" (TokenLn') @example/Example.hk:29:1-29:4 ]
, [ "" (TokenLn) @example/Example.hk:22:1-22:4
, "foo" (TokenVarId "foo") @example/Example.hk:22:1-22:4
, ":" (TokenRsvp ":") @example/Example.hk:22:5-22:6
, "Int" (TokenConId "Int") @example/Example.hk:22:7-22:10
, "->" (TokenRsvp "->") @example/Example.hk:22:11-22:13
, "Int" (TokenConId "Int") @example/Example.hk:22:14-22:17
, "->" (TokenRsvp "->") @example/Example.hk:22:18-22:20
, "Int" (TokenConId "Int") @example/Example.hk:22:21-22:24
, "" (TokenLn') @example/Example.hk:23:1-23:4 ]
, [ "" (TokenLn) @example/Example.hk:19:1-19:2
, "d" (TokenVarId "d") @example/Example.hk:19:1-19:2
, "=" (TokenRsvp "=") @example/Example.hk:19:3-19:4
, "3" (TokenInteger 3) @example/Example.hk:19:5-19:6
, ":" (TokenRsvp ":") @example/Example.hk:19:7-19:8
, "Int" (TokenConId "Int") @example/Example.hk:19:9-19:12
, "" (TokenLn') @example/Example.hk:22:1-22:4 ]
, [ "" (TokenLn) @example/Example.hk:15:1-15:2
, "c" (TokenVarId "c") @example/Example.hk:15:1-15:2
, "=" (TokenRsvp "=") @example/Example.hk:15:3-15:4
, "3" (TokenInteger 3) @example/Example.hk:15:5-15:6
, "" (TokenLn') @example/Example.hk:19:1-19:2 ]
, [ "" (TokenLn) @example/Example.hk:14:1-14:2
, "c" (TokenVarId "c") @example/Example.hk:14:1-14:2
, ":" (TokenRsvp ":") @example/Example.hk:14:3-14:4
, "Int" (TokenConId "Int") @example/Example.hk:14:5-14:8
, "" (TokenLn') @example/Example.hk:15:1-15:2 ]
, [ "" (TokenLn) @example/Example.hk:10:1-10:2
, "a" (TokenVarId "a") @example/Example.hk:10:1-10:2
, "=" (TokenRsvp "=") @example/Example.hk:10:3-10:4
, "#add" (TokenPrim "#add") @example/Example.hk:10:5-10:9
, "1" (TokenInteger 1) @example/Example.hk:10:10-10:11
, "2" (TokenInteger 2) @example/Example.hk:10:12-10:13
, "" (TokenLn') @example/Example.hk:14:1-14:2 ] ]

Beginning Parsing:
Unexpected tokens: "[ "-o" (TokenRsvp "-o") @example/Example.hk:23:11-23:13
, "Int" (TokenConId "Int") @example/Example.hk:23:14-23:17
, "-o" (TokenRsvp "-o") @example/Example.hk:23:18-23:20
, "Int" (TokenConId "Int") @example/Example.hk:23:21-23:24
, "" (TokenLn') @example/Example.hk:29:1-29:4 ]"Unexpected tokens: "[ "->" (TokenRsvp "->") @example/Example.hk:22:11-22:13
, "Int" (TokenConId "Int") @example/Example.hk:22:14-22:17
, "->" (TokenRsvp "->") @example/Example.hk:22:18-22:20
, "Int" (TokenConId "Int") @example/Example.hk:22:21-22:24
, "" (TokenLn') @example/Example.hk:23:1-23:4 ]"simple: 
Parser encountered fatal error.
CallStack (from HasCallStack):
  error, called at test/Main.hs:51:13 in main:Main
Test suite simple: FAIL
Test suite logged to: /home/gabe/projects/hawk/dist-newstyle/build/x86_64-linux/ghc-8.4.1/language-hawk-0.0.0/c/simple/test/language-hawk-0.0.0-simple.log

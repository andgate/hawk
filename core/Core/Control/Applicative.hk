// -----------------------------------------------------
// Core.Control.Applicative

-> Core.Control.Functor

<- Applicative(..)
   liftA
   liftA2


Functor f => Applicative f :-
  pure ? a -> f a
  
  (_<*>_) 4L
    ? f (a -> b) -> f a -> f b
  
  (_*>_) 4L
    a1 a2
    ? f a -> f b -> f b
    = (id <$ a1) <*> a2
    
  (_<*_) 4L
    ? f a -> f b -> f b
    = liftA2 const
    
    
liftA
  f a 
  ? Applicative f => (a -> b) -> f a -> f b
  = pure f <*> a
  
liftA2
  f a b
  ? Applicative f => (a -> b -> c) -> f a -> f b -> f c
  = map f a <*> b

